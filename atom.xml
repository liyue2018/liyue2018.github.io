<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cnly小姐的博客</title>
  
  <subtitle>他告诉我，一转眼就老了</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-27T17:27:41.428Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Liyue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javascript的学习</title>
    <link href="http://yoursite.com/2018/05/24/javascript%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/05/24/javascript的学习/</id>
    <published>2018-05-24T07:47:34.000Z</published>
    <updated>2018-05-27T17:27:41.428Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web-API-应用程序编程接口"><a href="#Web-API-应用程序编程接口" class="headerlink" title="Web API (应用程序编程接口)"></a>Web API (应用程序编程接口)</h2><p>API 是一些预定义的函数</p><p>浏览器提供的一套操作浏览器功能和页面元素的API(BOM和DOM)</p><h3 id="ECMAScript-Javascript的核心"><a href="#ECMAScript-Javascript的核心" class="headerlink" title="ECMAScript-Javascript的核心"></a>ECMAScript-Javascript的核心</h3><p>定义了Javascript的语法规范</p><p>Javascript的核心，描述了语言的基本语法和数据类型。ECMAScript是一套标准，定义了一种语言的标准和具体实现无关。<br><a id="more"></a></p><h3 id="BOM-浏览器对象模型"><a href="#BOM-浏览器对象模型" class="headerlink" title="BOM - 浏览器对象模型"></a>BOM - 浏览器对象模型</h3><p>一套操作浏览器功能的API</p><p>通过BOM可以操作浏览器窗口，比如：弹出框，控制浏览器跳转，获取分辨率</p><h3 id="DOM-文档对象模型"><a href="#DOM-文档对象模型" class="headerlink" title="DOM - 文档对象模型"></a>DOM - 文档对象模型</h3><p>一套操作页面元素的API</p><p>DOM可以把HTML看作文档树，通过DOM提供的API可以对树上的节点进行操作。</p><h2 id="DOM又称为文档树模型"><a href="#DOM又称为文档树模型" class="headerlink" title="DOM又称为文档树模型"></a>DOM又称为文档树模型</h2><p>1.文档：一个网页可以称为文档<br>2.节点：网页中的所有内容都是节点（属性，标签，文本，注释等）<br>3.元素：网页中的标签</p><p>DOM文档树(树形结构)是把所有节点抽象为对象的过程.</p><p>整个HTML文档是一个对象。里面所有的内容都是对象。</p><h3 id="DOM-经常进行的操作"><a href="#DOM-经常进行的操作" class="headerlink" title="DOM 经常进行的操作"></a>DOM 经常进行的操作</h3><p>1.获取属性<br>2.对元素进行操作(设置属性或调用方法)<br>3.动态创建元素<br>4.事件</p><h3 id="通过id获取元素"><a href="#通过id获取元素" class="headerlink" title="通过id获取元素"></a>通过id获取元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//通过id获取元素</span><br><span class="line">//如果没找到，返回null</span><br><span class="line">var box = document.getElementById(<span class="string">'box'</span>);//字符串，推荐用单引号</span><br><span class="line"></span><br><span class="line">//打印的是元素对应标签的内容</span><br><span class="line">console.log(box);</span><br><span class="line">//打印对象</span><br><span class="line">console.dir(box);</span><br><span class="line"></span><br><span class="line">//获取变量的类型  </span><br><span class="line">//typeof 获取对象类型始终返回object</span><br><span class="line">console.log(typeof(box));</span><br><span class="line"></span><br><span class="line">var arr = [];</span><br><span class="line">console.log(arr);//object</span><br><span class="line">console.log(typeof(arr));//object</span><br><span class="line"></span><br><span class="line">//获取对象的类型 --- 对象是有类型的</span><br><span class="line">//在javascript中创建对象用的是构造函数</span><br><span class="line">//构造函数是对象的类型</span><br><span class="line">//所有的元素都是派生于HTMLElement</span><br><span class="line">//类型决定了方法</span><br><span class="line"></span><br><span class="line">console.log(arr.constructor);//Array()</span><br><span class="line">console.log(box.constructor);//HTMLDivElement()</span><br></pre></td></tr></table></figure><h3 id="通过标签获取元素"><a href="#通过标签获取元素" class="headerlink" title="通过标签获取元素"></a>通过标签获取元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//根据标签名，动态获取一组HTML集合</span><br><span class="line">var divs = document.getElementsByName(<span class="string">'div'</span>);</span><br><span class="line"><span class="keyword">for</span>(var i = 0; i &lt; div.length;i++)&#123;</span><br><span class="line">    var div = divs[i];</span><br><span class="line">    console.log(div);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//HTMLCollection 元素的集合</span><br><span class="line">//伪数组 不具备数组的属性和方法</span><br><span class="line">console.log(<span class="string">'divs);</span></span><br></pre></td></tr></table></figure><h3 id="通过name获取元素"><a href="#通过name获取元素" class="headerlink" title="通过name获取元素"></a>通过name获取元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;form&gt;</span><br><span class="line">  &lt;input <span class="built_in">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span>&gt;</span><br><span class="line">  &lt;input <span class="built_in">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">//NodeList类型</span><br><span class="line">//节点的集合</span><br><span class="line">var radios = document.getElementsByName(<span class="string">'sex'</span>);</span><br><span class="line">console.log(radios);//NodeList</span><br><span class="line"></span><br><span class="line">//根据name，动态获取一组HTML集合</span><br><span class="line">var inputs = document.getElementsByName(<span class="string">'hobby'</span>);</span><br><span class="line"><span class="keyword">for</span>(var i = 0; i &lt; inputs.length;i++)&#123;</span><br><span class="line">    var input = inputs[i];</span><br><span class="line">    console.log(input);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="根据元素类名获取元素"><a href="#根据元素类名获取元素" class="headerlink" title="根据元素类名获取元素"></a>根据元素类名获取元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var mains = document.getElementsByClassName(<span class="string">'main'</span>);</span><br><span class="line"><span class="keyword">for</span>(var i = 0; i &lt; inputs.length;i++)&#123;</span><br><span class="line">    var main = mains[i];</span><br><span class="line">    console.log(main);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="根据选择器获取元素"><a href="#根据选择器获取元素" class="headerlink" title="根据选择器获取元素"></a>根据选择器获取元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//HTML5新增获取元素的方法</span><br><span class="line">//query 查询 Selector 选择器</span><br><span class="line">//查找一个元素，当页面有多个时，返回第一个</span><br><span class="line"></span><br><span class="line">var text = document.querySelector(<span class="string">'#text'</span>);</span><br><span class="line">    console.log(text);</span><br><span class="line">//NodeList 返回集合</span><br><span class="line">var inputs = document.querySelectorAll(<span class="string">'input[type=text]'</span>);</span><br></pre></td></tr></table></figure><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>事件三要素</p><p>1.事件源<br>2.事件名称<br>3.事件处理函数</p><h2 id="属性操作"><a href="#属性操作" class="headerlink" title="属性操作"></a>属性操作</h2><h3 id="非表单元素的属性"><a href="#非表单元素的属性" class="headerlink" title="非表单元素的属性"></a>非表单元素的属性</h3><p>1.href,title,src,id,className</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var link = document.getElementById(<span class="string">'box'</span>);</span><br><span class="line">console.log(link.href);</span><br><span class="line">//元素的属性 --- 包含了标签对应的属性</span><br><span class="line">//元素（对象）封装了标签对应的的属性</span><br><span class="line"></span><br><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;img src=<span class="string">"images/a.jpeg"</span> alt=<span class="string">"图片"</span> id=<span class="string">"img"</span> width=<span class="string">"300"</span> height=<span class="string">"200"</span> /&gt;</span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line">//获取属性</span><br><span class="line">var img = document.getElementById(<span class="string">'img'</span>);</span><br><span class="line">console.log(img.id)//img</span><br><span class="line">console.log(img.alt)//图片</span><br><span class="line">console.log(img.src)//images/a.jpeg</span><br><span class="line">console.log(img.width)//300</span><br><span class="line">console.log(img.height)//200</span><br><span class="line"></span><br><span class="line">//修改属性</span><br><span class="line"></span><br><span class="line">img.src = <span class="string">'images/b.png'</span>;</span><br><span class="line">img.alt = <span class="string">'修改过的'</span>;</span><br><span class="line">img.width = 500;</span><br></pre></td></tr></table></figure><p>2.innerHTML和innerText </p><p>innerHTML不是标准的DOM属性，会对标签进行转义。效率慢<br>innerText 最早IE中增加的属性，老版本的firefox不支持此属性。(老版本的firefox textContent)现在浏览器都支持此属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//写一个函数，处理innerText和textContent 兼容性</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> getInnerText(element) &#123;</span><br><span class="line">    // 判断element是否支持innerText</span><br><span class="line">    <span class="keyword">if</span>(typeof element.innerText === <span class="string">'string'</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> element.innerText;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> element.textContent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 设置元素之间的内容</span><br><span class="line"><span class="keyword">function</span> setInnerText(element,content) &#123;</span><br><span class="line">    // 判断element是否支持innerText</span><br><span class="line">    <span class="keyword">if</span>(typeof element.innerText === <span class="string">'string'</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> element.innerText = content;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">return</span> element.textContent = content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var box = document.getElementById(<span class="string">'box'</span>);</span><br><span class="line"></span><br><span class="line">setInnerText(box,<span class="string">'hello'</span>);</span><br></pre></td></tr></table></figure><h3 id="表单元素的属性"><a href="#表单元素的属性" class="headerlink" title="表单元素的属性"></a>表单元素的属性</h3><p>value 用于大部分表单元素内容的获取(option除外)<br>type可以获取input标签的类型(输入框或复选框等)<br>disabled禁用属性<br>checked复选框选中属性<br>selected下拉菜单选中属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> /&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> /&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> /&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> /&gt;</span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"radio"</span> /&gt;</span><br><span class="line">&lt;button <span class="built_in">type</span>=<span class="string">"button"</span> class=<span class="string">"btn btn-default"</span> id=<span class="string">"btn"</span>&gt;点击&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line">var inputs = document.getElementsByTagName(<span class="string">'input'</span>);</span><br><span class="line"><span class="keyword">for</span>(var i = 0; i&lt;input.length;i++) &#123;</span><br><span class="line">    var input = inputs[i];</span><br><span class="line">    <span class="keyword">if</span>(input.type !== <span class="string">'text'</span>) &#123;</span><br><span class="line">        <span class="built_in">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    input.value = i + 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//点击事件</span><br><span class="line">btn_c.onclick = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    var arr = [];</span><br><span class="line">    <span class="keyword">for</span>(var i = 0; i&lt;inputs.length;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(inputs[i].<span class="built_in">type</span> !== <span class="string">'text'</span>) &#123;</span><br><span class="line">            <span class="built_in">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        arr.push(inputs[i].value);</span><br><span class="line">        //inputs[i].disabled = <span class="literal">true</span>;  禁用文本框</span><br><span class="line">    &#125;</span><br><span class="line">    var str = arr.join(<span class="string">'|'</span>);</span><br><span class="line">    console.log(str);//1|2|3|4|5|6|7|8</span><br><span class="line"></span><br><span class="line">    //产生随机数</span><br><span class="line">    //得到一个两数之间的随机数，包括两个数在内</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> getRandomIntIncIusive(min, max) &#123;</span><br><span class="line">        min = Math,ceil(min);</span><br><span class="line">        max = Math.floor(max);</span><br><span class="line">        <span class="built_in">return</span> Math.floor(Math.random() * (max - min + 1)) + min;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h3><p>getAttribute() 获取标签行内属性<br>setAttribute() 设置标签行内属性<br>removeAttribute() 移除标签行内属性<br>与element属性的区别：上述三种方法用于获取任意的行内属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">var o = &#123;&#125;;</span><br><span class="line">console.log(o.a);//当访问对象中不存在的属性，返回underfined</span><br><span class="line"></span><br><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;div id=<span class="string">"box"</span> stuId=<span class="string">"1"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line">var box = document.getElementById(<span class="string">'box'</span>);</span><br><span class="line"></span><br><span class="line">//在Chrome中不能使用这种方式获取标签的自定义属性</span><br><span class="line">//console.log(box.stuId);</span><br><span class="line"></span><br><span class="line">//获取标签对应的自定义属性</span><br><span class="line">console.log(box.getAttribute(<span class="string">'stuId'</span>));//1</span><br><span class="line">//获取标签本身具有的属性</span><br><span class="line">console.log(box.getAttribute(<span class="string">'Id'</span>));//box</span><br><span class="line"></span><br><span class="line">//设置标签自定义属性</span><br><span class="line">box.setAttribute(<span class="string">'test'</span>,<span class="string">'hello'</span>);</span><br><span class="line">//设置标签本身就有的属性</span><br><span class="line">box.setAttribute(<span class="string">'class'</span>,<span class="string">'bg'</span>);</span><br><span class="line"></span><br><span class="line">//移除属性 </span><br><span class="line">box.removeAttribute(<span class="string">'test'</span>);</span><br><span class="line">box.removeAttribute(<span class="string">'class'</span>,<span class="string">'bg'</span>);</span><br><span class="line"></span><br><span class="line">//思考，设置元素的属性</span><br><span class="line">//不可以设置标签的自定义属性，但是box对象本身具有了abc属性</span><br><span class="line">box.abc = <span class="string">'hello'</span>;</span><br><span class="line">console.log(box.abc);//hello</span><br></pre></td></tr></table></figure><h3 id="样式操作"><a href="#样式操作" class="headerlink" title="样式操作"></a>样式操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;div id=<span class="string">"box"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line">var box = document.getElementById(<span class="string">'box'</span>);</span><br><span class="line"></span><br><span class="line">//样式设置</span><br><span class="line">//1.设置类样式 </span><br><span class="line">box.className = <span class="string">'bg'</span>;</span><br><span class="line">//2.设置style </span><br><span class="line">//通过样式属性设置宽高，位置的属性类型是字符串，需要加上单位</span><br><span class="line">box.style.width = <span class="string">'200px'</span>;</span><br><span class="line">box.style.backgroundColor = <span class="string">'pink'</span>;</span><br><span class="line"></span><br><span class="line">//设置坐标，一定先要脱离文档流</span><br><span class="line"></span><br><span class="line">box.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">box.style.left = <span class="string">'20px'</span>;</span><br><span class="line">box.style.top = <span class="string">'20px'</span>;</span><br><span class="line"></span><br><span class="line">//cssText 获取标签的style属性中的字符串</span><br><span class="line">box.style.cssText(<span class="string">'width:300px;background-color:pink'</span>);</span><br><span class="line"></span><br><span class="line">// 修改body背景色</span><br><span class="line"></span><br><span class="line">document.body.style.backgroundColor = <span class="string">'pink'</span>;</span><br><span class="line"></span><br><span class="line">//如果设置的样式属性比较多 推荐使用class</span><br><span class="line">//如果设置的样式属性比较少 推荐使用style</span><br></pre></td></tr></table></figure><h3 id="隔行变色"><a href="#隔行变色" class="headerlink" title="隔行变色"></a>隔行变色</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;ul id=<span class="string">"mv"</span>&gt;</span><br><span class="line">    &lt;li&gt;1&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;2&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;4&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  var <span class="built_in">bg</span>;</span><br><span class="line">  var lists = document.querySelectorAll(<span class="string">'#mv li'</span>);</span><br><span class="line">  <span class="keyword">for</span>(var i = 0; i&lt;lists.length;i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(i % 2 === 0) &#123;</span><br><span class="line">        lists[i].style.backgroundColor = <span class="string">'pink'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        lists[i].style.backgroundColor = <span class="string">'yellow'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    //鼠标放上高亮</span><br><span class="line">    lists[i].onmouseover = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        <span class="built_in">bg</span> = this.style.backgroundColor;</span><br><span class="line">        this.style.backgroundColor = <span class="string">'green'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lists[i].onmouseout = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        this.style.backgroundColor = <span class="built_in">bg</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="this-四种情况"><a href="#this-四种情况" class="headerlink" title="this 四种情况"></a>this 四种情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//函数中的this ---&gt; window 对象 </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">fn</span></span>() &#123; </span><br><span class="line">  console.log(this)//window</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//方法中的this</span><br><span class="line"></span><br><span class="line">var obj = &#123;</span><br><span class="line">    name:<span class="string">'zs'</span>,say:<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        console.log(this);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.say();</span><br><span class="line"></span><br><span class="line">//构造函数中的this  ---&gt; 当前对象</span><br><span class="line">/事件处理函数中的this  ---&gt; 触发事件的对象</span><br></pre></td></tr></table></figure><h2 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h2><h3 id="节点属性"><a href="#节点属性" class="headerlink" title="节点属性"></a>节点属性</h3><p>nodeName,nodeType,nodeValue</p><p>文本节点 nodeType = 3 ,nodeName:’#text’, nodeValue:文本内容<br>属性节点 nodeType = 2 nodeName:’’,nodeValue:<br>元素节点 nodeType = 1 nodeName:’’,(元素节点nodeValue始终是null)</p><h3 id="模拟文档树结构"><a href="#模拟文档树结构" class="headerlink" title="模拟文档树结构"></a>模拟文档树结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">//模拟DOM文档结构</span><br><span class="line">//构造函数 </span><br><span class="line"><span class="keyword">function</span> Node(options) &#123;</span><br><span class="line">    //设置默认值</span><br><span class="line">    options = options || &#123;&#125;;</span><br><span class="line">    this.id = options.id || <span class="string">''</span>;</span><br><span class="line">    this.className = options.className || <span class="string">''</span>;</span><br><span class="line">    this.nodeName = options.nodeName || <span class="string">''</span>;</span><br><span class="line">    this.nodeType = options.nodeType || 1;</span><br><span class="line">    this.nodeValue = options.nodeValue || null;</span><br><span class="line"></span><br><span class="line">    //设置一个属性记录子元素</span><br><span class="line">    this.children = [];</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//html 元素 </span><br><span class="line"></span><br><span class="line">var html = new Node(&#123;</span><br><span class="line">      nodeName: <span class="string">'HTML'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//head元素</span><br><span class="line"></span><br><span class="line">var head = new Node(&#123;</span><br><span class="line">    nodeName:<span class="string">'HEAD'</span></span><br><span class="line">&#125;);</span><br><span class="line">html.children.push(head);</span><br><span class="line"></span><br><span class="line">//body元素</span><br><span class="line"></span><br><span class="line">var body = new Node(&#123;</span><br><span class="line">    nodeName:<span class="string">'BODY'</span></span><br><span class="line">&#125;);</span><br><span class="line">html.children.push(body);</span><br><span class="line"></span><br><span class="line">//div元素</span><br><span class="line"></span><br><span class="line">var div = new Node(&#123;</span><br><span class="line">    nodeName:<span class="string">'DIV'</span></span><br><span class="line">&#125;);</span><br><span class="line">body.children.push(div);</span><br><span class="line"></span><br><span class="line">//p元素</span><br><span class="line"></span><br><span class="line">var p = new Node(&#123;</span><br><span class="line">    nodeName:<span class="string">'P'</span></span><br><span class="line">&#125;);</span><br><span class="line">body.children.push(p);</span><br><span class="line">console.dir(html);</span><br></pre></td></tr></table></figure><h3 id="节点层级"><a href="#节点层级" class="headerlink" title="节点层级"></a>节点层级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"box&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;first&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;111&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;111&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;111&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;333&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;!--abd--&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;444&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!-- javascript --&gt;</span></span><br><span class="line"><span class="string">var box = document.getElementById('box');</span></span><br><span class="line"><span class="string">//获取所有子元素</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">console.log(box.children);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//父元素</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">console.log(box.parentNode);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//获取第一个子节点</span></span><br><span class="line"><span class="string">console.dir(box.firstChild);</span></span><br><span class="line"><span class="string">//获取第一个子元素</span></span><br><span class="line"><span class="string">console.dir(box.firstElementChild);</span></span><br><span class="line"><span class="string">//获取最后一个子节点</span></span><br><span class="line"><span class="string">console.dir(box.lastChild);</span></span><br><span class="line"><span class="string">//获取最后一个子元素</span></span><br><span class="line"><span class="string">console.dir(box.lastElementChild);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//处理firstElementChild的兼容性问题 ie9以后才支持</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function getFirstElementChild(parent) &#123;</span></span><br><span class="line"><span class="string">    //如果当前浏览器支持firElementChild</span></span><br><span class="line"><span class="string">    if(parent.firstElementChild) &#123;</span></span><br><span class="line"><span class="string">        return parent.firstElementChild</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    var node, nodes = parnet.childNodes, i = 0;</span></span><br><span class="line"><span class="string">    while (node = nodes[i++]) &#123;</span></span><br><span class="line"><span class="string">        if (node.nodeType === 1) &#123;</span></span><br><span class="line"><span class="string">            return node;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return null;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var firstElement = getFirstElementChild(box);//&lt;div&gt;first&lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//处理lastElementChild的兼容性问题</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function lastElementChild() &#123;</span></span><br><span class="line"><span class="string">    //如果当前浏览器支持firElementChild</span></span><br><span class="line"><span class="string">    if(parent.lastElementChild) &#123;</span></span><br><span class="line"><span class="string">        return parent.lastElementChild</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    var node, nodes = parent.childNodes, i = nodes.length - 1;</span></span><br><span class="line"><span class="string">    while (node = nodes[i--]) &#123;</span></span><br><span class="line"><span class="string">        if (node.nodeType === 1) &#123;</span></span><br><span class="line"><span class="string">            return node;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return null;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//兄弟节点</span></span><br><span class="line"><span class="string">//获取下一个兄弟节点(没有兼容性问题)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">console.log(box.nextSibling);//#text 文本节点</span></span><br><span class="line"><span class="string">console.log(box.previousSibling);//前一个</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//获取下一个兄弟元素(有兼容性问题)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">console.log(box.nextElementSibling);//&lt;p&gt;444&lt;/p&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">console.log(box.previousElementSibling);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[兼容性](https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling)</span></span><br></pre></td></tr></table></figure><h3 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;ul id=<span class="string">"ul"</span>&gt;</span><br><span class="line">    &lt;li&gt;1&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;2&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;4&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var ul = document.getElementById(<span class="string">'ul'</span>);</span><br><span class="line">//在第3个li之前插入新的li</span><br><span class="line"></span><br><span class="line">var li = document.createElement(<span class="string">'li'</span>);</span><br><span class="line">li.innerText(<span class="string">'hello'</span>);</span><br><span class="line">ul.insertBefore(li,ul[2]);</span><br><span class="line"></span><br><span class="line">//替换元素</span><br><span class="line"></span><br><span class="line">var li_r = document.createElement(<span class="string">'li'</span>);</span><br><span class="line">li.innerText(<span class="string">'world'</span>);</span><br><span class="line">ul.replacechild(li_r,ul[1]);</span><br><span class="line"></span><br><span class="line">//删除所有li</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(var i = 0; i&lt;ul.children.length;i++) &#123;</span><br><span class="line">    var li = ul.children[i];</span><br><span class="line">    ul.removeChild(li);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="动态生成列表"><a href="#动态生成列表" class="headerlink" title="动态生成列表"></a>动态生成列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 动态展示列表 --&gt;</span><br><span class="line">&lt;div class=<span class="string">"jk-docs-search"</span> id=<span class="string">"jkSearch"</span>&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">""</span> placeholder=<span class="string">"请输入搜索关键字"</span> class=<span class="string">"search-box form-control"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line"></span><br><span class="line">   //动态展示列表</span><br><span class="line"></span><br><span class="line">    var search_data = [</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;,</span><br><span class="line">      &#123;<span class="string">"key"</span>:<span class="string">"手机"</span>,<span class="string">"qre"</span>:5656&#125;</span><br><span class="line"></span><br><span class="line">    ];</span><br><span class="line">    //动态创建列表(在内存中)</span><br><span class="line">    var search_list = document.createElement(<span class="string">'ul'</span>);</span><br><span class="line">    //把创建的列表放到div中</span><br><span class="line">    var jk_docs_search = document.querySelector(<span class="string">'.jk-docs-search'</span>);</span><br><span class="line">    jk_docs_search.appendChild(search_list);</span><br><span class="line">    // 设置元素之间的内容</span><br><span class="line">       <span class="keyword">function</span> setInnerText(element,content) &#123;</span><br><span class="line">           // 判断element是否支持innerText</span><br><span class="line">           <span class="keyword">if</span>(typeof element.innerText === <span class="string">'string'</span>) &#123;</span><br><span class="line">               <span class="built_in">return</span> element.innerText = content;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="built_in">return</span> element.textContent = content;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    // 遍历数组<span class="keyword">for</span> 生成li</span><br><span class="line">    <span class="keyword">for</span>(var i = 0;i&lt;search_data.length;i++) &#123;</span><br><span class="line">       //创建li</span><br><span class="line">       var search_li = document.createElement(<span class="string">'li'</span>);</span><br><span class="line">       search_list.appendChild(search_li);</span><br><span class="line">       //设置li内容</span><br><span class="line">       setInnerText(search_li,search_data[i].key);</span><br><span class="line">       //鼠标放在li上高亮显示</span><br><span class="line">       search_li.onmouseover = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">          this.style.backgroundColor = <span class="string">'lightgray'</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       search_li.onmouseout = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">          this.style.backgroundColor = <span class="string">''</span>;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //循环中不停渲染</span><br><span class="line">    search_data.forEach(<span class="keyword">function</span>(item,index)&#123;</span><br><span class="line">        //forEach 遍历数组，参数是一个函数</span><br><span class="line">        //第一个参数是数组中的元素，第二个参数是索引</span><br><span class="line">        search_list.innerHTML += <span class="string">'&lt;li&gt;'</span>+ item +<span class="string">'&lt;/li&gt;'</span>; </span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    //输出执行time和timeEnd之间的代码所消耗的时间</span><br><span class="line">    console.time(<span class="string">'flag'</span>);</span><br><span class="line"></span><br><span class="line">    //假设这里有一段代码</span><br><span class="line">    console.timeEnd(<span class="string">'flag'</span>);//flag:1.346ms</span><br><span class="line"></span><br><span class="line">    //使用forEach方法遍历数组</span><br><span class="line">    //影响性能的两个地方</span><br><span class="line">    //字符串拼接</span><br><span class="line">    //解决方法：使用数组</span><br><span class="line"></span><br><span class="line">    var arr = [];</span><br><span class="line">    arr.push(<span class="string">'&lt;ul&gt;'</span>));</span><br><span class="line"></span><br><span class="line">    search_data.forEach(<span class="keyword">function</span>(item,index) &#123;</span><br><span class="line">           arr.push(<span class="string">'&lt;li&gt;'</span> + item + <span class="string">'&lt;/li&gt;'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    arr.push(<span class="string">'&lt;/ul&gt;'</span>);</span><br><span class="line">    //拼接数组里的数据</span><br><span class="line"></span><br><span class="line">    jk_docs_search.innerHTML = arr.join(<span class="string">''</span>);//使用空格拼接数据</span><br></pre></td></tr></table></figure><h2 id="创建元素的三种方式"><a href="#创建元素的三种方式" class="headerlink" title="创建元素的三种方式"></a>创建元素的三种方式</h2><p>1.document.write();<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//如果在事件中使用，会覆盖整个页面</span><br><span class="line">btn.onclick = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    document.write(<span class="string">'&lt;p&gt;3333&lt;/p&gt;'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.innerHTML();<br>3.document.createElement();<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">fn</span></span>() &#123;</span><br><span class="line">    //获取毫秒值</span><br><span class="line">    var d1 = +new Date();</span><br><span class="line">    var arr = [];</span><br><span class="line">    <span class="keyword">for</span>(var i = 0; i&lt;1000;i++) &#123;</span><br><span class="line">        var div = document.createElement(<span class="string">'div'</span>);</span><br><span class="line">        arr.push(div);</span><br><span class="line">    &#125;</span><br><span class="line">    document.body.appendChild(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="void"><a href="#void" class="headerlink" title="void"></a>void</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//不跳转</span><br><span class="line">&lt;a href=<span class="string">"javascript:void(0);"</span>&gt;&lt;/a&gt;</span><br><span class="line">//拨打电话</span><br><span class="line">&lt;a href=<span class="string">"tel:1234567"</span>&gt;&lt;/a&gt;</span><br><span class="line">//void 关键字</span><br><span class="line">//void 会执行()里的代码或语句，只会返回undefine. void()里面必须要有参数</span><br><span class="line"></span><br><span class="line">var data = void(1 + 2);</span><br></pre></td></tr></table></figure><h3 id="循环外写函数"><a href="#循环外写函数" class="headerlink" title="循环外写函数"></a>循环外写函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i = 0; i&lt;len;i++) &#123;</span><br><span class="line">    //注册事件</span><br><span class="line">    link.onclick = linkClick;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//事件处理函数</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">linkClick</span></span>() &#123;</span><br><span class="line">    //取消所有元素高亮显示</span><br><span class="line">    <span class="keyword">for</span>(var i = 0; i&lt;len;i++) &#123;</span><br><span class="line">        list[i].className = <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    //当前元素的父节点高亮</span><br><span class="line">    this.parentNode.className = <span class="string">'current'</span>;</span><br><span class="line">    //取消默认行为</span><br><span class="line">    <span class="built_in">return</span> flase;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Web-API-应用程序编程接口&quot;&gt;&lt;a href=&quot;#Web-API-应用程序编程接口&quot; class=&quot;headerlink&quot; title=&quot;Web API (应用程序编程接口)&quot;&gt;&lt;/a&gt;Web API (应用程序编程接口)&lt;/h2&gt;&lt;p&gt;API 是一些预定义的函数&lt;/p&gt;
&lt;p&gt;浏览器提供的一套操作浏览器功能和页面元素的API(BOM和DOM)&lt;/p&gt;
&lt;h3 id=&quot;ECMAScript-Javascript的核心&quot;&gt;&lt;a href=&quot;#ECMAScript-Javascript的核心&quot; class=&quot;headerlink&quot; title=&quot;ECMAScript-Javascript的核心&quot;&gt;&lt;/a&gt;ECMAScript-Javascript的核心&lt;/h3&gt;&lt;p&gt;定义了Javascript的语法规范&lt;/p&gt;
&lt;p&gt;Javascript的核心，描述了语言的基本语法和数据类型。ECMAScript是一套标准，定义了一种语言的标准和具体实现无关。&lt;br&gt;
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>date过滤器</title>
    <link href="http://yoursite.com/2018/04/28/date%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    <id>http://yoursite.com/2018/04/28/date过滤器/</id>
    <published>2018-04-28T08:45:36.000Z</published>
    <updated>2018-04-28T08:49:50.076Z</updated>
    
    <content type="html"><![CDATA[<h2 id="date过滤器使用"><a href="#date过滤器使用" class="headerlink" title="date过滤器使用"></a>date过滤器使用</h2><h3 id="date过滤器的用法"><a href="#date过滤器的用法" class="headerlink" title="date过滤器的用法"></a>date过滤器的用法</h3><p>在html中用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; date_expression | date : format : timezone&#125;&#125;</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;&#123;&#123;1288323623006 | date:<span class="string">'medium'</span>&#125;&#125;&lt;/span&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;span&gt;&#123;&#123;1288323623006 | date:<span class="string">'yyyy-MM-dd HH:mm:ss Z'</span>&#125;&#125;&lt;/span&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;span&gt;&#123;&#123;<span class="string">'1288323623006'</span> | date:<span class="string">'MM/dd/yyyy @ h:mma'</span>&#125;&#125;&lt;/span&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;span&gt;&#123;&#123;<span class="string">'1288323623006'</span> | date:<span class="string">"MM/dd/yyyy 'at' h:mma"</span>&#125;&#125;&lt;/span&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p>输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Oct 29, 2010 11:40:23 AM</span><br><span class="line"></span><br><span class="line">2010-10-29 11:40:23 +0800</span><br><span class="line"></span><br><span class="line">10/29/2010 @ 11:40AM</span><br><span class="line"></span><br><span class="line">10/29/2010 at 11:40AM</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;date过滤器使用&quot;&gt;&lt;a href=&quot;#date过滤器使用&quot; class=&quot;headerlink&quot; title=&quot;date过滤器使用&quot;&gt;&lt;/a&gt;date过滤器使用&lt;/h2&gt;&lt;h3 id=&quot;date过滤器的用法&quot;&gt;&lt;a href=&quot;#date过滤器的用法&quot; class=&quot;headerlink&quot; title=&quot;date过滤器的用法&quot;&gt;&lt;/a&gt;date过滤器的用法&lt;/h3&gt;&lt;p&gt;在html中用法：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123; date_expression | date : format : timezone&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span&amp;gt;&amp;#123;&amp;#123;1288323623006 | date:&lt;span class=&quot;string&quot;&gt;&#39;medium&#39;&lt;/span&gt;&amp;#125;&amp;#125;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span&amp;gt;&amp;#123;&amp;#123;1288323623006 | date:&lt;span class=&quot;string&quot;&gt;&#39;yyyy-MM-dd HH:mm:ss Z&#39;&lt;/span&gt;&amp;#125;&amp;#125;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span&amp;gt;&amp;#123;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;1288323623006&#39;&lt;/span&gt; | date:&lt;span class=&quot;string&quot;&gt;&#39;MM/dd/yyyy @ h:mma&#39;&lt;/span&gt;&amp;#125;&amp;#125;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span&amp;gt;&amp;#123;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;1288323623006&#39;&lt;/span&gt; | date:&lt;span class=&quot;string&quot;&gt;&quot;MM/dd/yyyy &#39;at&#39; h:mma&quot;&lt;/span&gt;&amp;#125;&amp;#125;&amp;lt;/span&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="angular2" scheme="http://yoursite.com/categories/angular2/"/>
    
    
      <category term="angular2" scheme="http://yoursite.com/tags/angular2/"/>
    
  </entry>
  
  <entry>
    <title>jQuery相关知识点</title>
    <link href="http://yoursite.com/2018/04/23/jQuery%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2018/04/23/jQuery相关知识点/</id>
    <published>2018-04-23T04:51:26.000Z</published>
    <updated>2018-05-27T08:13:42.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jQuery-优点"><a href="#jQuery-优点" class="headerlink" title="jQuery 优点"></a>jQuery 优点</h2><h3 id="隐式迭代"><a href="#隐式迭代" class="headerlink" title="隐式迭代"></a>隐式迭代</h3><p>jQuery会自己遍历，不需要我们遍历。</p><p>当用JQuery找到带有”.class”类的全部元素,然后隐藏它们时,无需循环遍历每个返回的元素.</p><h3 id="轻量级"><a href="#轻量级" class="headerlink" title="轻量级."></a>轻量级.</h3><p>JQuery非常小,压缩包只有18KB左右.</p><h3 id="强大的选择器"><a href="#强大的选择器" class="headerlink" title="强大的选择器."></a>强大的选择器.</h3><p>JQuery不仅支持CSS里的所有选择器,还有JQuery独有的选择器.<br><a id="more"></a></p><h3 id="出色的DOM操作封装"><a href="#出色的DOM操作封装" class="headerlink" title="出色的DOM操作封装."></a>出色的DOM操作封装.</h3><p>JQuery封装了大量常用的DOM操作.</p><h3 id="兼容性好"><a href="#兼容性好" class="headerlink" title="兼容性好."></a>兼容性好.</h3><p>JQuery能够在不同浏览器中兼容,同时还修复了一些浏览器之间的差异.</p><p>1.x版本兼容IE6,7,8<br>2.x版本Internet Explorer: 9+<br>以上两个版本都不再更新</p><h3 id="链式编程"><a href="#链式编程" class="headerlink" title="链式编程"></a>链式编程</h3><p>即对发生在同一个JQuery对象上的一组动作,可以直接连写而无需重复获取对象,使得JQuery的代码无比优雅.</p><h2 id="this-和-this-关键字在-jQuery-中有何不同？"><a href="#this-和-this-关键字在-jQuery-中有何不同？" class="headerlink" title="$(this) 和 this 关键字在 jQuery 中有何不同？"></a>$(this) 和 this 关键字在 jQuery 中有何不同？</h2><p>$(this) 返回一个 jQuery 对象，你可以对它调用多个 jQuery 方法，比如用 text() 获取文本，用val() 获取值等等。</p><p>而 this 代表当前元素，它是 JavaScript 关键词中的一个，表示上下文中的当前 DOM 元素。你不能对它调用 jQuery 方法，直到它被 $() 函数包裹，例如 $(this)</p><h2 id="jQuery入口函数"><a href="#jQuery入口函数" class="headerlink" title="jQuery入口函数"></a>jQuery入口函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//js的入口函数会比jQuery的执行的晚一些，</span><br><span class="line">//它不仅等待页面加载完成，而且会等待图片加载完成</span><br><span class="line"></span><br><span class="line">window.onload = <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">//这段话会在最后打印</span><br><span class="line">   console.log(<span class="string">'这是用Javascript入口函数的第一种写法'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//jQuery入口函数会在页面加载完成后，执行，并且不会有事件覆盖</span><br><span class="line"></span><br><span class="line">$(document).ready(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h2 id="DOM对象和jQuery对象的区别和联系"><a href="#DOM对象和jQuery对象的区别和联系" class="headerlink" title="DOM对象和jQuery对象的区别和联系"></a>DOM对象和jQuery对象的区别和联系</h2><h3 id="DOM对象"><a href="#DOM对象" class="headerlink" title="DOM对象"></a>DOM对象</h3><p>DOM对象就是用js方法获取到的对象。</p><h3 id="jQuery对象"><a href="#jQuery对象" class="headerlink" title="jQuery对象"></a>jQuery对象</h3><p>jQuery对象就是用jQuery方法获取到的对象，它是一个伪数组（没有数组的方法，拥有自己的方法），内部封装的还是DOM对象。</p><h3 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h3><p>因为是两个不同的对象，所以不能互相调用对方的方法。即DOM对象不能调用jQuery方法，反之亦然。</p><h3 id="两者联系"><a href="#两者联系" class="headerlink" title="两者联系"></a>两者联系</h3><p>可以相互转化，之后就可以调用对方的方法了。</p><p>DOM对象转jQuery对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li id=<span class="string">"a"</span>&gt;a&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;b&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;c&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;d&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- js --&gt;</span><br><span class="line"></span><br><span class="line">  var a = document.getElementById(<span class="string">'a'</span>);</span><br><span class="line">  &lt;!-- 使用$符转化为jQuery对象 --&gt;</span><br><span class="line">  &lt;!-- 就可以使用jQuery方法 --&gt;</span><br><span class="line">  $(a).text(<span class="string">"hello world"</span>);</span><br><span class="line"></span><br><span class="line">&lt;!-- jQuery --&gt;</span><br><span class="line">  &lt;!-- 变量名<span class="variable">$li</span> 是一种jquery变量的命名习惯 --&gt;</span><br><span class="line">  var <span class="variable">$li</span> = $(<span class="string">'li'</span>);</span><br><span class="line">  &lt;!-- 使用下标，取出其中的DOM对象 --&gt;</span><br><span class="line">  <span class="variable">$li</span>[1].style.backgroundColor = <span class="string">'pink'</span>;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="jQuery-中-符号的实质"><a href="#jQuery-中-符号的实质" class="headerlink" title="jQuery 中$符号的实质"></a>jQuery 中$符号的实质</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- $其实就是一个函数，用时记得跟小括号$() --&gt;</span><br><span class="line">console.log(typeof $)</span><br><span class="line"><span class="keyword">function</span></span><br></pre></td></tr></table></figure><h3 id="的三种用法"><a href="#的三种用法" class="headerlink" title="$的三种用法"></a>$的三种用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 参数是一个<span class="keyword">function</span>，入口函数 --&gt;</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="title">function</span></span>()&#123;&#125;)</span><br><span class="line"></span><br><span class="line">&lt;!-- 参数是DOM对象，转化成jQuery对象 --&gt;</span><br><span class="line"></span><br><span class="line">$(document).ready(<span class="function"><span class="title">function</span></span>()&#123;&#125;)</span><br><span class="line"></span><br><span class="line">&lt;!-- 参数是一个字符串，用来找对象 --&gt;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#btn'</span>),$(<span class="string">'.btn'</span>),$(<span class="string">'div'</span>)等</span><br></pre></td></tr></table></figure><h2 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>jQuery选择器是jQuery为我们提供的一组方法，让我们更加方便的获取页面元素。jQuery选择器返回的是jQuery对象。</p><h3 id="几种选择器"><a href="#几种选择器" class="headerlink" title="几种选择器"></a>几种选择器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(s1,s2) //并集选择器</span><br><span class="line">$(s1 s2) //后代选择器</span><br><span class="line">$(s1&gt;s2) //子代选择器</span><br><span class="line">$(s1+s2) //兄弟选择器</span><br><span class="line">$(s1s2) //交集选择器</span><br><span class="line"></span><br><span class="line">//chidren 子代选择器</span><br><span class="line">// $(this).children().children(<span class="string">'li'</span>).css(<span class="string">'opacity'</span>,<span class="string">'1'</span>);</span><br><span class="line">//find后代选择器</span><br><span class="line">$(this).find(<span class="string">'li'</span>).css(<span class="string">'opacity'</span>,<span class="string">'1'</span>);</span><br></pre></td></tr></table></figure><h3 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h3><p>这类选择器都带冒号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//:eq 获取到li元素中，选择索引号为2的元素，索引号index从0开始。</span><br><span class="line">$(<span class="string">'li:eq(2'</span>).css(<span class="string">'color'</span>,<span class="string">'red'</span>);</span><br><span class="line"></span><br><span class="line">//:odd 获取到li元素，索引号为奇数的元素。</span><br><span class="line"></span><br><span class="line">$(<span class="string">'li:odd'</span>).css(<span class="string">'color'</span>,<span class="string">'red'</span>);</span><br><span class="line"></span><br><span class="line">//:gt(index)大于下标的元素变化 :lt(index)小于下标的元素变化</span><br><span class="line">//第3个li开始变化</span><br><span class="line">$(<span class="string">'li:gt(1)'</span>).css(<span class="string">'color'</span>,<span class="string">'blue);</span></span><br></pre></td></tr></table></figure><h3 id="筛选选择器（方法）"><a href="#筛选选择器（方法）" class="headerlink" title="筛选选择器（方法）"></a>筛选选择器（方法）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.chidren(selector) 相当于$(<span class="string">'ul&gt;li'</span>)，子类选择器</span><br><span class="line"></span><br><span class="line">$(<span class="string">'ul'</span>).chidren(<span class="string">'li'</span>);</span><br><span class="line"></span><br><span class="line">2.find(selector) 相当于$(<span class="string">'ul li'</span>)后代选择器</span><br><span class="line"></span><br><span class="line">$(<span class="string">'ul'</span>).find(<span class="string">'li'</span>);</span><br><span class="line"></span><br><span class="line">3.siblings(selector) 查找兄弟节点，不包括自己</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.first'</span>).siblings(<span class="string">'li'</span>);</span><br><span class="line"></span><br><span class="line">4.eq(index) 相当于$(<span class="string">'li:eq(2)'</span>)，index从0开始</span><br><span class="line"></span><br><span class="line">$(<span class="string">'li'</span>).eq(2);//返回jq对象</span><br><span class="line">$(<span class="string">'li'</span>).get(2)//返回js对象</span><br><span class="line"></span><br><span class="line">5.next() 查找下一个兄弟</span><br><span class="line"></span><br><span class="line">$(<span class="string">'li'</span>).prev();</span><br><span class="line"></span><br><span class="line">6.prev() 查找上一个兄弟</span><br><span class="line"></span><br><span class="line">$(<span class="string">'li'</span>).next();</span><br></pre></td></tr></table></figure><h2 id="css操作"><a href="#css操作" class="headerlink" title="css操作"></a>css操作</h2><h3 id="操作单个样式"><a href="#操作单个样式" class="headerlink" title="操作单个样式"></a>操作单个样式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//css(name,value)</span><br><span class="line">//修改单个样式</span><br><span class="line">//name:样式名 value:样式值</span><br><span class="line">$(<span class="string">'li'</span>)</span><br><span class="line">  .css(<span class="string">'backgroundColor'</span>,<span class="string">'pink'</span>),</span><br><span class="line">  .css(<span class="string">'color'</span>,<span class="string">'red'</span>),</span><br><span class="line">  .css(<span class="string">'font-size'</span>,<span class="string">'32px'</span>);//<span class="string">'font-size'</span>因为是字符串，所以可以是加横杆的写法</span><br></pre></td></tr></table></figure><h3 id="操作多个样式"><a href="#操作多个样式" class="headerlink" title="操作多个样式"></a>操作多个样式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//css(obj)</span><br><span class="line">//修改多个样式</span><br><span class="line">//</span><br><span class="line">$(<span class="string">'li'</span>).css(&#123;</span><br><span class="line">    backgroundColor:<span class="string">'pink'</span>,</span><br><span class="line">    color:<span class="string">'red'</span>,</span><br><span class="line">    fontSize: <span class="string">'32px'</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="获取样式"><a href="#获取样式" class="headerlink" title="获取样式"></a>获取样式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//css(name)</span><br><span class="line">//name:想要获取的样式</span><br><span class="line">//</span><br><span class="line">$(<span class="string">'li'</span>).css(’fontSize‘);</span><br><span class="line"></span><br><span class="line">//隐式迭代</span><br><span class="line">//设置操作时，会给jq内部的所有对象都设置上相同的值。</span><br><span class="line">//在获取值时，只会获取第一个值。</span><br><span class="line">$(<span class="string">'li'</span>).eq(0).css(<span class="string">'fontSize'</span>,<span class="string">'20'</span>);</span><br><span class="line">$(<span class="string">'li'</span>).eq(1).css(<span class="string">'fontSize'</span>,<span class="string">'21'</span>);</span><br><span class="line">$(<span class="string">'li'</span>).eq(2).css(<span class="string">'fontSize'</span>,<span class="string">'22'</span>);</span><br><span class="line">$(<span class="string">'li'</span>).eq(3).css(<span class="string">'fontSize'</span>,<span class="string">'23'</span>);</span><br><span class="line"></span><br><span class="line">console.log($(<span class="string">'li'</span>).css(<span class="string">'fontSize'</span>));//20px</span><br></pre></td></tr></table></figure><h2 id="class操作"><a href="#class操作" class="headerlink" title="class操作"></a>class操作</h2><h3 id="添加样式类"><a href="#添加样式类" class="headerlink" title="添加样式类"></a>添加样式类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//name:需要添加的样式类名，注意参数不要带点</span><br><span class="line">addClass(name);</span><br><span class="line"></span><br><span class="line">// 给所有的li添加aa样式</span><br><span class="line">$(<span class="string">'li'</span>).addClass(<span class="string">'aa'</span>);</span><br></pre></td></tr></table></figure><h3 id="移除样式类"><a href="#移除样式类" class="headerlink" title="移除样式类"></a>移除样式类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//name:需要移除的样式类名</span><br><span class="line">removeClass(name);</span><br><span class="line"></span><br><span class="line">// 给所有的li移除aa样式</span><br><span class="line">$(<span class="string">'li'</span>).removeClass(<span class="string">'aa'</span>);</span><br></pre></td></tr></table></figure><h3 id="判断是否有某个样式类"><a href="#判断是否有某个样式类" class="headerlink" title="判断是否有某个样式类"></a>判断是否有某个样式类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//name:需要判断的样式类名</span><br><span class="line">hasClass(name);</span><br><span class="line"></span><br><span class="line">// li是否有aa样式</span><br><span class="line">$(<span class="string">'li'</span>).hasClass(<span class="string">'aa'</span>);</span><br></pre></td></tr></table></figure><h3 id="切换样式类"><a href="#切换样式类" class="headerlink" title="切换样式类"></a>切换样式类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toggleClass(name);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'li'</span>).toggleClass(<span class="string">'aa'</span>);</span><br></pre></td></tr></table></figure><h2 id="jQuery操作属性"><a href="#jQuery操作属性" class="headerlink" title="jQuery操作属性"></a>jQuery操作属性</h2><h3 id="attr操作"><a href="#attr操作" class="headerlink" title="attr操作"></a>attr操作</h3><p>在标签里面写的，如alt,title等，通过attr方法操作。用法和css一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//设置单个属性</span><br><span class="line">//attr(name,value)</span><br><span class="line"></span><br><span class="line">$(<span class="string">'img'</span>).attr(<span class="string">'alt'</span>,<span class="string">'未加载'</span>);</span><br><span class="line">$(<span class="string">'img'</span>).attr(<span class="string">'title'</span>,<span class="string">'哈哈'</span>);</span><br><span class="line"></span><br><span class="line">//设置多个属性</span><br><span class="line"></span><br><span class="line">$(<span class="string">'img'</span>).attr(&#123;</span><br><span class="line">   alt: <span class="string">'未加载'</span>,</span><br><span class="line">   title:<span class="string">'哈哈'</span>,</span><br><span class="line">   aa:<span class="string">'bb'</span> //自定义属性</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//获取某个属性</span><br><span class="line"></span><br><span class="line">console.log($(<span class="string">'img'</span>).attr(<span class="string">'alt'</span>));</span><br></pre></td></tr></table></figure><h3 id="prop操作"><a href="#prop操作" class="headerlink" title="prop操作"></a>prop操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//对于布尔类型的属性，不要用attr方法,使用prop方法，用法一样。</span><br><span class="line"></span><br><span class="line">//设置属性</span><br><span class="line"></span><br><span class="line">$(<span class="string">'input[type="checkbox"]'</span>).prop(<span class="string">"checked"</span>,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">//获取某个属性</span><br><span class="line"></span><br><span class="line">$(<span class="string">':checked'</span>).prop(<span class="string">'checked'</span>);//返回<span class="literal">true</span>或者<span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="jQuery动画"><a href="#jQuery动画" class="headerlink" title="jQuery动画"></a>jQuery动画</h2><h3 id="三组基本动画"><a href="#三组基本动画" class="headerlink" title="三组基本动画"></a>三组基本动画</h3><p>1.显示(show)与隐藏(hide)<br>2.滑入(slideUp)与滑出(slideDown)与切换(slideToggle),效果与卷帘门类似。<br>2.淡入(fadeIn)与淡出(fadeOut)与切换(fadeToggle)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">show([speed],[callback]);</span><br><span class="line">//speed(可选):动画执行的时间</span><br><span class="line">    //1.如果不传，就没有动画效果，如果是slide和fade系列，会默认为normal</span><br><span class="line">    //2.毫秒值(1000)，动画在1000毫秒执行完成（推荐）</span><br><span class="line">    //3.固定字符串，slow(200ms),normal(400ms),fast(600ms),</span><br><span class="line">        如果传其他字符串，则默认为normal</span><br><span class="line">    //callback(可选)：执行动画后执行的回调函数</span><br><span class="line"></span><br><span class="line">$(<span class="string">'div'</span>).show(1000,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    console.log(<span class="string">'hello world'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h3><p>animate:自定义动画</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(selector).animate(&#123;params&#125;,[speed],[easing],[callback]);</span><br><span class="line">//&#123;params&#125;:要执行动画的css属性，带数字(必选)</span><br><span class="line">//speed:执行动画时长(可选)</span><br><span class="line">//easing:执行效果，默认为swing(缓动),可以是linear(匀速)</span><br><span class="line">//callback:动画执行完后立即执行的回调函数(可选)</span><br></pre></td></tr></table></figure><h3 id="动画队列与停止动画"><a href="#动画队列与停止动画" class="headerlink" title="动画队列与停止动画"></a>动画队列与停止动画</h3><p>在同一个元素上执行多个动画，那么对于这个动画来说，后面的动画会被放到动画队列中，等前面的动画执行完成后才会执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//stop方法:停止动画效果</span><br><span class="line">stop(clearQueue,jumpToEnd);</span><br><span class="line">//第一个参数:是否清除队列 <span class="literal">true</span>/<span class="literal">false</span></span><br><span class="line">//第二个参数:是否跳转到最终效果 <span class="literal">true</span>/<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$li</span>.stop().animate(&#123;width:200&#125;);</span><br></pre></td></tr></table></figure><h3 id="mouseenter-与-mouseover"><a href="#mouseenter-与-mouseover" class="headerlink" title="mouseenter 与 mouseover"></a>mouseenter 与 mouseover</h3><p>不论鼠标指针穿过被选元素或其子元素，都会触发 mouseover 事件。</p><p>只有在鼠标指针穿过被选元素时，才会触发 mouseenter 事件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//mouseover:鼠标经过事件</span><br><span class="line">//mouseout:鼠标离开事件</span><br><span class="line"></span><br><span class="line">//mouseenter:鼠标进入事件</span><br><span class="line">//mouseleave:鼠标经过事件</span><br></pre></td></tr></table></figure><h2 id="jquery怎么移除标签onclick属性？"><a href="#jquery怎么移除标签onclick属性？" class="headerlink" title="jquery怎么移除标签onclick属性？"></a>jquery怎么移除标签onclick属性？</h2><p>获得a标签的onclick属性: $(“a”).attr(“onclick”)</p><p>删除onclick属性：$(“a”).removeAttr(“onclick”);</p><p>设置onclick属性：$(“a”).attr(“onclick”,”test();”);</p><h2 id="jquery中addClass-removeClass-toggleClass的使用。"><a href="#jquery中addClass-removeClass-toggleClass的使用。" class="headerlink" title="jquery中addClass,removeClass,toggleClass的使用。"></a>jquery中addClass,removeClass,toggleClass的使用。</h2><p>$(selector).addClass(class)：为每个匹配的元素添加指定的类名</p><p>$(selector).removeClass(class)：从所有匹配的元素中删除全部或者指定的类，删除class中某个值</p><p>$(selector).toggleClass(class)：如果存在（不存在）就删除（添加）一个类</p><p>$(selector).removeAttr(class);删除class这个属性</p><h2 id="如何用jQuery禁用浏览器的前进后退按钮？"><a href="#如何用jQuery禁用浏览器的前进后退按钮？" class="headerlink" title="如何用jQuery禁用浏览器的前进后退按钮？"></a>如何用jQuery禁用浏览器的前进后退按钮？</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> language=<span class="string">"javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line">$(document).ready(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">     window.history.forward(1);</span><br><span class="line"></span><br><span class="line">     //OR</span><br><span class="line"></span><br><span class="line">     window.history.forward(-1);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="jQuery动态创建与添加节点"><a href="#jQuery动态创建与添加节点" class="headerlink" title="jQuery动态创建与添加节点"></a>jQuery动态创建与添加节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- jQuery --&gt;</span><br><span class="line">$(<span class="string">'li'</span>).append(<span class="string">'&lt;a target="_blank",href="http://web.xxx.com"&gt;链接&lt;/a&gt;'</span>);</span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line">var li = document.getElementById(<span class="string">'li'</span>);</span><br><span class="line">var href = document.creatElement(<span class="string">'a'</span>);</span><br><span class="line">li.appendChild(href);</span><br><span class="line">href.setAttribute(<span class="string">'href'</span>,<span class="string">'http://web.xxx.com'</span>);</span><br><span class="line">href.setAttribute(<span class="string">'target'</span>,<span class="string">'_blank'</span>);</span><br><span class="line">href.setAttribute(<span class="string">'innerHTML'</span>,<span class="string">'链接'</span>);</span><br></pre></td></tr></table></figure><h3 id="jQuery添加节点的几种方式"><a href="#jQuery添加节点的几种方式" class="headerlink" title="jQuery添加节点的几种方式"></a>jQuery添加节点的几种方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//添加到子元素的最后面</span><br><span class="line"></span><br><span class="line">$(<span class="string">'div'</span>).append($(<span class="string">"p"</span>));</span><br><span class="line">$(<span class="string">'p'</span>).appendTo($(<span class="string">"div"</span>));</span><br><span class="line"></span><br><span class="line">//添加到子元素的最前面</span><br><span class="line"></span><br><span class="line">$(<span class="string">'div'</span>).prepend($(<span class="string">"p"</span>));</span><br><span class="line">$(<span class="string">'p'</span>).prependTo($(<span class="string">"div"</span>));</span><br><span class="line"></span><br><span class="line">//作为兄弟元素添加到后/前面</span><br><span class="line"></span><br><span class="line">$(<span class="string">'div'</span>).after($(<span class="string">"p"</span>));</span><br><span class="line">$(<span class="string">'div'</span>).before($(<span class="string">"p"</span>));</span><br></pre></td></tr></table></figure><h3 id="清空节点与删除节点"><a href="#清空节点与删除节点" class="headerlink" title="清空节点与删除节点"></a>清空节点与删除节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">empty():清空指定节点的所有元素，自身保留（清理门户）</span><br><span class="line"></span><br><span class="line">//清空div的所有内容，包括清除子元素上绑定的事件</span><br><span class="line">$(<span class="string">'div'</span>).empty;</span><br><span class="line">//会造成内存泄漏，绑定的事件不会被清除</span><br><span class="line">$(<span class="string">'div'</span>).html(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">remove():相比于empty，自身也删除。</span><br><span class="line"></span><br><span class="line">$(<span class="string">'div'</span>).remove();</span><br></pre></td></tr></table></figure><h3 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h3><p>可复制匹配的元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//复制$(selector)所匹配到的元素（深度复制）</span><br><span class="line">//cloneNode(<span class="literal">true</span>);</span><br><span class="line">//返回值为复制的新元素，和原来的元素没有任何关系。</span><br><span class="line">//即修改新元素，不会影响到原来的元素。</span><br><span class="line">$(selector).<span class="built_in">clone</span>();</span><br><span class="line">//<span class="built_in">clone</span>()不传参数和传<span class="literal">false</span>都是深度复制，但是不能复制事件</span><br><span class="line">//传<span class="literal">true</span>可以复制事件</span><br></pre></td></tr></table></figure><h2 id="index-方法"><a href="#index-方法" class="headerlink" title="index()方法"></a>index()方法</h2><p>index()方法会返回当前元素在所有兄弟元素里面的索引。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'li'</span>).index();</span><br></pre></td></tr></table></figure></p><h2 id="jQuery阻止默认事件与阻止冒泡"><a href="#jQuery阻止默认事件与阻止冒泡" class="headerlink" title="jQuery阻止默认事件与阻止冒泡"></a>jQuery阻止默认事件与阻止冒泡</h2><h3 id="默认事件与冒泡事件概念："><a href="#默认事件与冒泡事件概念：" class="headerlink" title="默认事件与冒泡事件概念："></a>默认事件与冒泡事件概念：</h3><p>默认事件：指浏览器的默认动作。比如a链接指定了跳转地址，设置阻止默认事件后，它就不能进行跳转了。<br>冒泡事件：指事件从原始元素开始一直冒泡到DOM树的最上层。比如子元素和父元素都注册了点击事件，如果没有阻止冒泡事件，那么当点击子元素时，父元素上的注册事件也会发生。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; </span></span><br><span class="line"><span class="string">         charset=utf-8"</span> /&gt;</span><br><span class="line">    &lt;title&gt;默认事件与冒泡事件&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"box"</span>&gt;</span><br><span class="line">        &lt;a href=<span class="string">"http://www.baidu.com"</span> id=<span class="string">"testLink"</span>&gt;百度&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script src=<span class="string">"mod/jquery-1.7.1.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">function</span> stopDefault( e ) &#123;</span><br><span class="line">            e.preventDefault()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> stopPropagation( e ) &#123;</span><br><span class="line">        　　e.stopPropagation()</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">'#testLink'</span>).on(<span class="string">'click'</span>,<span class="keyword">function</span>(e) &#123;</span><br><span class="line">           console.log(<span class="string">'我的链接地址是：'</span> + this.href + </span><br><span class="line">             <span class="string">', 但是我不会跳转。'</span>);</span><br><span class="line">           stopDefault(e);</span><br><span class="line">           stopPropagation(e);</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">'#box'</span>).on(<span class="string">'click'</span>,<span class="keyword">function</span>(e) &#123;</span><br><span class="line">           console.log(<span class="string">'我是外面的盒子'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="jQuery特殊属性操作"><a href="#jQuery特殊属性操作" class="headerlink" title="jQuery特殊属性操作"></a>jQuery特殊属性操作</h2><h3 id="val方法"><a href="#val方法" class="headerlink" title="val方法"></a>val方法</h3><p>val方法用于设置和获取表单元素的值，例如input,textarea的值<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//设置值</span><br><span class="line">$(<span class="string">'li'</span>).val(<span class="string">"name"</span>);</span><br><span class="line">//获取值</span><br><span class="line">$(<span class="string">'li'</span>).val();</span><br></pre></td></tr></table></figure></p><h3 id="html方法与text方法"><a href="#html方法与text方法" class="headerlink" title="html方法与text方法"></a>html方法与text方法</h3><p>html方法相当与innerHTML, text方法相当于innerText<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//设置内容</span><br><span class="line">//可以识别标签</span><br><span class="line">//显示内容为：这是一段html方法设置的内容</span><br><span class="line">$(<span class="string">'li'</span>).html(<span class="string">'&lt;span&gt;这是一段html方法设置的内容&lt;/span&gt;'</span>);</span><br><span class="line">//获取内容(+标签)</span><br><span class="line">$(<span class="string">'li'</span>).html();</span><br><span class="line"></span><br><span class="line">//设置内容,无法识别标签</span><br><span class="line">//显示内容为：&lt;span&gt;这是一段html方法设置的内容&lt;/span&gt;</span><br><span class="line">$(<span class="string">'li'</span>).text(<span class="string">'&lt;span&gt;这是一段html方法设置的内容&lt;/span&gt;'</span>);</span><br><span class="line"></span><br><span class="line">//获取内容</span><br><span class="line">$(<span class="string">'li'</span>).text();</span><br></pre></td></tr></table></figure></p><h3 id="width方法与height方法"><a href="#width方法与height方法" class="headerlink" title="width方法与height方法"></a>width方法与height方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//获取div宽度</span><br><span class="line">$(<span class="string">'div'</span>).css(<span class="string">'div'</span>);//20px</span><br><span class="line">//width方法直接获取到的是数字，并且就是获取width数值</span><br><span class="line">$(<span class="string">'div'</span>).width();//width</span><br><span class="line">$(<span class="string">'div'</span>).innerWidth();//width + padding</span><br><span class="line">$(<span class="string">'div'</span>).outerWidth();//width + padding + border</span><br><span class="line">$(<span class="string">'div'</span>).outerWidth(<span class="literal">true</span>);//width + padding + border + margin</span><br><span class="line"></span><br><span class="line">//获取页面可视区的宽度和高度</span><br><span class="line"></span><br><span class="line">$(window).resize(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    $(window).width();</span><br><span class="line">    $(window).height();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="scrollTop-与-scrollLeft"><a href="#scrollTop-与-scrollLeft" class="headerlink" title="scrollTop 与 scrollLeft"></a>scrollTop 与 scrollLeft</h3><p>设置或获取垂直滚动条的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(window).scroll(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    //获取页面被卷曲的高度</span><br><span class="line">    $(window).scrollTop();</span><br><span class="line">    //获取页面被卷曲的宽度</span><br><span class="line">    $(window).scrollLeft();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="offset方法与position方法"><a href="#offset方法与position方法" class="headerlink" title="offset方法与position方法"></a>offset方法与position方法</h3><p>offset方法获取元素距离document的位置，position方法获取的是元素距离有定位的父元素的位置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//获取元素距离doucument的位置，返回值为对象：&#123;left:200,top:100&#125;</span><br><span class="line">$(selector).offset();</span><br><span class="line">//获取相对于其最近的有定位的父元素的位置</span><br><span class="line">$(selector).position();</span><br></pre></td></tr></table></figure><h2 id="jQuery事件机制"><a href="#jQuery事件机制" class="headerlink" title="jQuery事件机制"></a>jQuery事件机制</h2><h3 id="jQuery事件发展历程"><a href="#jQuery事件发展历程" class="headerlink" title="jQuery事件发展历程"></a>jQuery事件发展历程</h3><p>简单事件绑定&gt;&gt;bind事件绑定&gt;&gt;delegate事件绑定&gt;&gt;on事件绑定(推荐)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">//注册简单事件,给自己注册事件 缺点:一次只能注册一个事件</span><br><span class="line">//对于新增加的元素,无法注册事件</span><br><span class="line">$(<span class="string">'li'</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    alert(<span class="string">'hello world'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">//<span class="built_in">bind</span>方式</span><br><span class="line">//两个事件都做同一件事</span><br><span class="line">$(<span class="string">'li'</span>).<span class="built_in">bind</span>(<span class="string">'click mouseenter'</span>,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    alert(<span class="string">'hello world'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">//注册不同事件</span><br><span class="line">$(<span class="string">'li'</span>).<span class="built_in">bind</span>(&#123;</span><br><span class="line">    click:<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        alert(<span class="string">'hello world'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    mouseenter:<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        alert(<span class="string">'hello world'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//事件解绑(不推荐使用)</span><br><span class="line">$(selector).unbind();</span><br><span class="line">//解绑匹配元素的所有click事件</span><br><span class="line">$(selector).unbind(<span class="string">'click'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//delegate:代理，委托 缺点:只能给自己注册</span><br><span class="line">//核心原理是事件冒泡</span><br><span class="line">//给父元素注册事件，利用事件冒泡，实现效果</span><br><span class="line">//给ul注册一个事件，不是由ul执行，而是li执行</span><br><span class="line">//第一个参数:selector 事件的最终执行者</span><br><span class="line">//第二个参数:事件的类型</span><br><span class="line">//第三个参数:函数 </span><br><span class="line"></span><br><span class="line">//动态创建的也能有事件</span><br><span class="line"></span><br><span class="line">$(<span class="string">'ul'</span>).delegate(<span class="string">'li'</span>,<span class="string">'click'</span>,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    alert(<span class="string">'hello world'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//事件解绑(不推荐使用)</span><br><span class="line">$(selector).undelegate();</span><br><span class="line">//解绑匹配元素的所有click事件</span><br><span class="line">$(selector).undelegate(<span class="string">'click'</span>);</span><br></pre></td></tr></table></figure><h3 id="on事件绑定"><a href="#on事件绑定" class="headerlink" title="on事件绑定"></a>on事件绑定</h3><p>jQuery1.7之后，用on统一了所有事件的处理方法。<br>最现代的方式，兼容zepto(移动端类似jQuery的一个库)</p><p>1.on注册简单事件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//表示给$(selector)绑定事件，并且由自己触发，不支持动态绑定.</span><br><span class="line">$(selector).on(<span class="string">'click'</span>,<span class="function"><span class="title">function</span></span>()&#123;&#125;);</span><br></pre></td></tr></table></figure></p><p>2.on注册委托事件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//表示给$(selector)绑定代理事件，由自己的子元素如li触发，支持动态绑定.</span><br><span class="line">$(selector).on(<span class="string">'click'</span>,<span class="string">'li'</span>,<span class="function"><span class="title">function</span></span>()&#123;&#125;);</span><br><span class="line"></span><br><span class="line">//若一个选择器上既有委托事件又有简单事件，先执行委托事件，再执行简单事件</span><br></pre></td></tr></table></figure></p><p>3.on注册事件的语法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//第一个参数:events,绑定事件的名称可以是由空格分隔的多个事件(标准事件或自定义事件)</span><br><span class="line">//第一个参数:selector,执行事件的后代元素(可选),如果没有后代元素,事件将有自己执行</span><br><span class="line">//第三个参数:data,传递给处理函数的数据，事件触发时通过event.data来使用(不常使用)</span><br><span class="line">//第四个参数:handler,事件处理函数</span><br><span class="line"></span><br><span class="line">$(selector).on(events[,selector][,data],handler);</span><br></pre></td></tr></table></figure></p><p>4.off方式(推荐)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//事件解绑(推荐使用)</span><br><span class="line">$(selector).off();</span><br><span class="line">//解绑匹配元素的所有click事件</span><br><span class="line">$(selector).off(<span class="string">'click'</span>);</span><br></pre></td></tr></table></figure></p><h3 id="触发事件"><a href="#触发事件" class="headerlink" title="触发事件"></a>触发事件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(selector).click();//触发click事件</span><br><span class="line">$(selector).trigger(<span class="string">'click'</span>);</span><br></pre></td></tr></table></figure><h3 id="jQuery事件对象"><a href="#jQuery事件对象" class="headerlink" title="jQuery事件对象"></a>jQuery事件对象</h3><p>jQuery事件对象其实就是js事件对象的一个封装，处理了兼容性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">screenX和screenY //对应屏幕最左上角的值</span><br><span class="line">clientX和clientY //距离页面左上角的位置(忽视滚动条)</span><br><span class="line">pageX和pageY //距离页面最顶部的左上角的位置(会计算滚动条的距离)</span><br><span class="line"></span><br><span class="line">event.keyCode //按下的键盘代码</span><br><span class="line">event.data //存储绑定事件时传递的附加数据</span><br><span class="line"></span><br><span class="line">var m = 10;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'div'</span>).on(<span class="string">'click'</span>,m,<span class="keyword">function</span>(e)&#123;</span><br><span class="line"> console.log(<span class="string">'这是我传进去的数字'</span> + e.data);//这是我传进去的数字10</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">event.stopPropagation() //阻止事件冒泡</span><br><span class="line">event.preventDefault() //阻止浏览器默认事件</span><br><span class="line"><span class="built_in">return</span> <span class="literal">false</span> //既能阻止事件冒泡，又能阻止浏览器器默认事件</span><br><span class="line"></span><br><span class="line">$(<span class="string">'a'</span>).on(<span class="string">'click'</span>,<span class="keyword">function</span>(e)&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    e.stopPropagetion();</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="javascript-阻止默认事件和冒泡事件"><a href="#javascript-阻止默认事件和冒泡事件" class="headerlink" title="javascript 阻止默认事件和冒泡事件"></a>javascript 阻止默认事件和冒泡事件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">    &lt;title&gt;默认事件与冒泡事件&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"box"</span>&gt;</span><br><span class="line">        &lt;a href=<span class="string">"http://www.baidu.com"</span> id=<span class="string">"testLink"</span>&gt;百度&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        var oBox = document.getElementById(<span class="string">'box'</span>),</span><br><span class="line">            oLink = document.getElementById(<span class="string">'testLink'</span>);</span><br><span class="line">        <span class="keyword">function</span> stopDefault( e ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e &amp;&amp; e.preventDefault) &#123;</span><br><span class="line">                e.preventDefault();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                e.returnValue = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> stopPropagation( e ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.stopPropagation) &#123;</span><br><span class="line">                e.stopPropagation()</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                e.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        oLink.onclick = <span class="keyword">function</span>(event) &#123;</span><br><span class="line">            var e = event || window.event</span><br><span class="line">            console.log(<span class="string">'我的链接地址是：'</span> + this.href + <span class="string">', 但是我不会跳转。'</span>);</span><br><span class="line">            stopDefault(e);</span><br><span class="line">            stopPropagation(e);</span><br><span class="line">        &#125;</span><br><span class="line">        oBox.onclick = <span class="function"><span class="title">function</span></span>() &#123;            </span><br><span class="line">            console.log(<span class="string">'我是外面的盒子'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="jQuery链式编程"><a href="#jQuery链式编程" class="headerlink" title="jQuery链式编程"></a>jQuery链式编程</h2><p>通常情况下，只有设置操作才能把链式编程延续下去，因为获取操作，会返回获取到的相应的值，无法返回jQuery对象。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//筛选选择器会改变jQuery对象的DOM对象，它会回到之前的对象。</span><br><span class="line">end();</span><br><span class="line">//会回到this这个对象上</span><br><span class="line">$(this).text(<span class="string">''</span>).prevAll().text(<span class="string">''</span>).end().nextAll().text(<span class="string">'empty'</span>);</span><br></pre></td></tr></table></figure><h3 id="jQuery-each方法"><a href="#jQuery-each方法" class="headerlink" title="jQuery each方法"></a>jQuery each方法</h3><p>jQuery的隐式迭代会对所有的DOM对象设置相同的值，但是如果我们需要给每一个对象设置不同的值的时候，就需要自己进行迭代。</p><p>作用：遍历jQuery对象集合，为每一个匹配的元素执行一个函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//参数一表示当前元素在所有匹配元素中的索引号</span><br><span class="line">//参数二表示当前元素(DOM对象)</span><br><span class="line"></span><br><span class="line">$(selector).each(<span class="keyword">function</span>(index,element)&#123;&#125;);</span><br><span class="line"></span><br><span class="line">//jQuery对象的遍历 两种方法</span><br><span class="line">//<span class="keyword">for</span>循环</span><br><span class="line">// <span class="keyword">for</span>(var i = 0; i &lt; $(<span class="string">'.opacity-wrapper li'</span>).length;i++)&#123;</span><br><span class="line">//     $(<span class="string">'.opacity-wrapper li'</span>).eq(i).css(<span class="string">'opacity'</span>,(i+1)/10);</span><br><span class="line">// &#125;</span><br><span class="line">//each方法</span><br><span class="line">$(<span class="string">'.opacity-wrapper li'</span>).each(<span class="keyword">function</span>(index,element)&#123;</span><br><span class="line">    $(element).css(<span class="string">'opacity'</span>,(index + 1) / 10);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="多库共存"><a href="#多库共存" class="headerlink" title="多库共存"></a>多库共存</h3><p>jQuery使用$作为标志，但是如果与其他框架中的$冲突时，jQuery可以释放$符的控制权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//释放$的控制权，并且把$的能力给了jQuery</span><br><span class="line">var jQuery = $.noConflict();</span><br></pre></td></tr></table></figure><h2 id="jQuery插件"><a href="#jQuery插件" class="headerlink" title="jQuery插件"></a>jQuery插件</h2><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><p>1.jquery.color.js<br>2.jquery.lazyload.js<br>3.jquery.ui.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//1.引入jQuery文件 </span><br><span class="line">//2.引入相应插件 </span><br><span class="line">//3.直接使用</span><br><span class="line"></span><br><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;img class=<span class="string">"lazy"</span> data-original=<span class="string">"images/small-image03.jpeg"</span> alt=<span class="string">""</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- jquery --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script src=<span class="string">"assets/jquery-1.11.3/jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"assets/plugin/jquery.color.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"assets/plugin/jquery.lazyload.js"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    //图片懒加载</span><br><span class="line">   $(<span class="string">'img.lazy'</span>).lazyload();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="自定义插件"><a href="#自定义插件" class="headerlink" title="自定义插件"></a>自定义插件</h3><p>jQuery插件的实质就是给jQuery的原型上增加方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//$.fn === jQuery.prototype </span><br><span class="line"></span><br><span class="line">$.fn.bgColor = <span class="keyword">function</span>(<span class="variable">$color</span>)&#123;</span><br><span class="line">    //this是一个jQuery对象</span><br><span class="line">    this.css(<span class="string">'background'</span>,<span class="variable">$color</span>);</span><br><span class="line">    //链式编程</span><br><span class="line">    <span class="built_in">return</span> this;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'div'</span>).bgColor(<span class="string">'red'</span>).width(400);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;jQuery-优点&quot;&gt;&lt;a href=&quot;#jQuery-优点&quot; class=&quot;headerlink&quot; title=&quot;jQuery 优点&quot;&gt;&lt;/a&gt;jQuery 优点&lt;/h2&gt;&lt;h3 id=&quot;隐式迭代&quot;&gt;&lt;a href=&quot;#隐式迭代&quot; class=&quot;headerlink&quot; title=&quot;隐式迭代&quot;&gt;&lt;/a&gt;隐式迭代&lt;/h3&gt;&lt;p&gt;jQuery会自己遍历，不需要我们遍历。&lt;/p&gt;
&lt;p&gt;当用JQuery找到带有”.class”类的全部元素,然后隐藏它们时,无需循环遍历每个返回的元素.&lt;/p&gt;
&lt;h3 id=&quot;轻量级&quot;&gt;&lt;a href=&quot;#轻量级&quot; class=&quot;headerlink&quot; title=&quot;轻量级.&quot;&gt;&lt;/a&gt;轻量级.&lt;/h3&gt;&lt;p&gt;JQuery非常小,压缩包只有18KB左右.&lt;/p&gt;
&lt;h3 id=&quot;强大的选择器&quot;&gt;&lt;a href=&quot;#强大的选择器&quot; class=&quot;headerlink&quot; title=&quot;强大的选择器.&quot;&gt;&lt;/a&gt;强大的选择器.&lt;/h3&gt;&lt;p&gt;JQuery不仅支持CSS里的所有选择器,还有JQuery独有的选择器.&lt;br&gt;
    
    </summary>
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>jquery中事件委托</title>
    <link href="http://yoursite.com/2018/04/23/jquery%E4%B8%AD%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/"/>
    <id>http://yoursite.com/2018/04/23/jquery中事件委托/</id>
    <published>2018-04-23T01:10:03.000Z</published>
    <updated>2018-04-23T03:37:19.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事件委托概念"><a href="#事件委托概念" class="headerlink" title="事件委托概念"></a>事件委托概念</h2><p>事件委托 === 事件代理</p><p>事件委托是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。</p><p>事件冒泡：就是事件从最深节点开始，然后逐步向上传播事件。</p><p>例：页面上有一个节点树，div &gt; ul  &gt; li  &gt;  a<br>比如给最里面的a 加一个click 事件，那么事件就会一层一层的往外执行，执行顺序 a &gt; li &gt; ul &gt; div, 有这样一个机制，当我们给最外层的div添加点击事件，那么里面的ul,li,a  做点击事件的时候，都会冒泡到最外层的div上，所以都会触发，这就是事件委托，委托他们父集代为执行事件。<br><a id="more"></a></p><h2 id="javascript-事件委托的实例"><a href="#javascript-事件委托的实例" class="headerlink" title="javascript 事件委托的实例"></a>javascript 事件委托的实例</h2><p>通过点击事件改变td的背景色。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- 事件绑定 --&gt;  </span><br><span class="line">    &lt;table id=<span class="string">"myTable"</span> border=<span class="string">"1"</span>&gt;  </span><br><span class="line">        &lt;tr&gt;  </span><br><span class="line">            &lt;td&gt;1&lt;/td&gt;  </span><br><span class="line">            &lt;td&gt;2&lt;/td&gt;  </span><br><span class="line">            &lt;td&gt;3&lt;/td&gt;  </span><br><span class="line">        &lt;/tr&gt;  </span><br><span class="line">    &lt;/table&gt; </span><br><span class="line"></span><br><span class="line">&lt;!-- javascript --&gt;</span><br><span class="line">window.onload = <span class="function"><span class="title">function</span></span>()&#123;  </span><br><span class="line">    var oTa = document.getElementById(<span class="string">"myTable"</span>);  </span><br><span class="line">    var aTd = oTa.getElementsByTagName(<span class="string">'td'</span>);  </span><br><span class="line">    <span class="keyword">for</span>(var i=0;i&lt;aTd.length;i++)&#123;  </span><br><span class="line">        aTd[i].onclick = <span class="function"><span class="title">function</span></span>()&#123;  </span><br><span class="line">            aTd[i].style.background = <span class="string">'red'</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&lt;!-- 事件委托 --&gt;</span><br><span class="line">window.onload = <span class="function"><span class="title">function</span></span>()&#123;  </span><br><span class="line">    var oTa= document.getElementById(<span class="string">"myTable"</span>);  </span><br><span class="line">    oTa.onclick = <span class="function"><span class="title">function</span></span>()&#123;         //点击 table、td均可以alert(123)  </span><br><span class="line">       alert(123);    </span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="上诉实例中，点击事件也会在父元素中触发。如果我们只想让td触发而不想让table触发？"><a href="#上诉实例中，点击事件也会在父元素中触发。如果我们只想让td触发而不想让table触发？" class="headerlink" title="上诉实例中，点击事件也会在父元素中触发。如果我们只想让td触发而不想让table触发？"></a>上诉实例中，点击事件也会在父元素中触发。如果我们只想让td触发而不想让table触发？</h3><p>利用Event对象的target属性进行判断，它可以返回事件的目标节点就是事件源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">window.onload = <span class="function"><span class="title">function</span></span>()&#123;  </span><br><span class="line">　　var oTa = document.getElementById(<span class="string">"myTable"</span>);  </span><br><span class="line">　　oTa.onclick = <span class="keyword">function</span>(e)&#123; </span><br><span class="line">　　　　var e = e || window.event;</span><br><span class="line">    //处理兼容性标准浏览器：event.target，IE浏览器：event.srcElement  </span><br><span class="line">　　　　var target = e.target || e.srcElement;　</span><br><span class="line">    //返回值是一个大写的，判断时需要转换为小写　　  </span><br><span class="line">　　　　target.nodeName.toLowerCase() == <span class="string">'td'</span> ? alert(<span class="string">'我点中了table'</span>) ：(target.style.background = <span class="string">'red'</span>);  //三元运算符进行判断  </span><br><span class="line">　　&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="jQuery-事件委托"><a href="#jQuery-事件委托" class="headerlink" title="jQuery 事件委托"></a>jQuery 事件委托</h2><h3 id="Jquery的事件委派写法："><a href="#Jquery的事件委派写法：" class="headerlink" title="Jquery的事件委派写法："></a>Jquery的事件委派写法：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(父元素).on(<span class="string">'click'</span>,<span class="string">'子元素选择器'</span>,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">            //代码块</span><br><span class="line">     &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 事件绑定 --&gt;  </span><br><span class="line">    &lt;table id=<span class="string">"myTable"</span> border=<span class="string">"1"</span>&gt;  </span><br><span class="line">        &lt;tr&gt;  </span><br><span class="line">            &lt;td&gt;111&lt;/td&gt;  </span><br><span class="line">            &lt;td&gt;222&lt;/td&gt;  </span><br><span class="line">            &lt;td&gt;333&lt;/td&gt;  </span><br><span class="line">            &lt;td&gt;444&lt;/td&gt;  </span><br><span class="line">        &lt;/tr&gt;  </span><br><span class="line">    &lt;/table&gt; </span><br><span class="line"></span><br><span class="line">    &lt;script src=<span class="string">"http://libs.baidu.com/jquery/1.9.1/jquery.min.js"</span>&gt;&lt;/script&gt;  </span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;  </span><br><span class="line">    $(<span class="function"><span class="title">function</span></span>()&#123;         </span><br><span class="line">        $(<span class="string">"#myTable td"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;    </span><br><span class="line">            $(this).html();  //普通写法，如果有100个td元素，就要绑定100次事件，十分浪费性能  </span><br><span class="line">        &#125;)  </span><br><span class="line">        $(<span class="string">"#myTable"</span>).click(<span class="keyword">function</span>(e)&#123;    //这种点击方式怎么排除父元素  </span><br><span class="line">            console.log(e.target);  </span><br><span class="line">            var <span class="variable">$clicked</span> = $(e.target);    //e.target 捕捉到触发的元素  </span><br><span class="line">            console.log(e.target.nodeName);  //结果为大写，用toLowerCase()  转换为小写  </span><br><span class="line">            e.target.nodeName.toLowerCase() == <span class="string">'table'</span> ? alert(<span class="string">'我点中table了'</span>)  : <span class="variable">$clicked</span>.html();  //排除父元素的点击效果  </span><br><span class="line">        &#125;)  </span><br><span class="line">        // jQuery1.7的on绑定方法,替代了以往的<span class="built_in">bind</span>、live等方法，内部自动含有事件委托机制  </span><br><span class="line">        // $(selector).on(event,childSelector,data,<span class="keyword">function</span>,map)   on方法的语法  </span><br><span class="line">        // $(selector).on(event,childSelector,<span class="function"><span class="title">function</span></span>()&#123;&#125;)        on方法语法，绑定在父元素上 事件，子选择器，回调函数  </span><br><span class="line">        $(<span class="string">"#myTable"</span>).on(<span class="string">'click'</span>,<span class="string">'td'</span>,<span class="function"><span class="title">function</span></span>()&#123;  </span><br><span class="line">            $(this).html();  </span><br><span class="line">        &#125;)  </span><br><span class="line">    &#125;)  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="jQuery的事件委托方法bind、live、delegate、on之间有什么区别？"><a href="#jQuery的事件委托方法bind、live、delegate、on之间有什么区别？" class="headerlink" title="jQuery的事件委托方法bind、live、delegate、on之间有什么区别？"></a>jQuery的事件委托方法bind、live、delegate、on之间有什么区别？</h3><p>1.live 把事件委托交给了document（根节点），document 向下去寻找符合条件的元素（）， 不用等待document加载结束也可以生效。</p><p>2.delegate可指定事件委托对象，相比于live性能更优，直接锁定指定选择器；</p><p>3.on事件委托对象选填，如果不填，即给对象自身注册事件，填了作用和delegate一致。</p><p>4.bind只能给调用它的时候已经存在的元素绑定事件，不能给未来新增的元素绑定事件，存在局限性。</p><p>在jQuery 1.7中 .bind()、.live()和.delegate() 统一用on代替，解决混乱问题。</p><p>$(elems).on(events, selector, data, fn);</p><p>$(elems).off(events, selector, fn);//解除事件</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="事件委托的优点"><a href="#事件委托的优点" class="headerlink" title="事件委托的优点:"></a>事件委托的优点:</h3><p>1.在页面dom元素较多的情况下，大大减少了dom操作，优化了性能；<br>2.值需要为一个父元素绑定事件，就可以管理他下面的所有子元素；</p><h3 id="适用性"><a href="#适用性" class="headerlink" title="适用性"></a>适用性</h3><p>适合:click 、mousedown、mouseup、keydown 、keyup、keypress<br>不适合：mouseover和mouseout虽然也有事件冒泡，但是处理他们要特别注意，因为需要经常计算他们的位置，处理起来不太容易。<br>focus、blur之类的本身就没有冒泡的特性，自然不能用事件委托；</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;事件委托概念&quot;&gt;&lt;a href=&quot;#事件委托概念&quot; class=&quot;headerlink&quot; title=&quot;事件委托概念&quot;&gt;&lt;/a&gt;事件委托概念&lt;/h2&gt;&lt;p&gt;事件委托 === 事件代理&lt;/p&gt;
&lt;p&gt;事件委托是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。&lt;/p&gt;
&lt;p&gt;事件冒泡：就是事件从最深节点开始，然后逐步向上传播事件。&lt;/p&gt;
&lt;p&gt;例：页面上有一个节点树，div &amp;gt; ul  &amp;gt; li  &amp;gt;  a&lt;br&gt;比如给最里面的a 加一个click 事件，那么事件就会一层一层的往外执行，执行顺序 a &amp;gt; li &amp;gt; ul &amp;gt; div, 有这样一个机制，当我们给最外层的div添加点击事件，那么里面的ul,li,a  做点击事件的时候，都会冒泡到最外层的div上，所以都会触发，这就是事件委托，委托他们父集代为执行事件。&lt;br&gt;
    
    </summary>
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery" scheme="http://yoursite.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>h5移动端相关知识点</title>
    <link href="http://yoursite.com/2018/04/23/h5%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2018/04/23/h5移动端相关知识点/</id>
    <published>2018-04-22T17:24:28.000Z</published>
    <updated>2018-04-28T08:46:30.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="页面通用模板"><a href="#页面通用模板" class="headerlink" title="页面通用模板"></a>页面通用模板</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"> &lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">        &lt;meta content=<span class="string">"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> name=<span class="string">"viewport"</span>&gt;</span><br><span class="line">        &lt;meta content=<span class="string">"yes"</span> name=<span class="string">"apple-mobile-web-app-capable"</span>&gt;</span><br><span class="line">        &lt;meta content=<span class="string">"black"</span> name=<span class="string">"apple-mobile-web-app-status-bar-style"</span>&gt;</span><br><span class="line">        &lt;meta content=<span class="string">"telephone=no"</span> name=<span class="string">"format-detection"</span>&gt;</span><br><span class="line">        &lt;meta content=<span class="string">"email=no"</span> name=<span class="string">"format-detection"</span>&gt;</span><br><span class="line">        &lt;title&gt;标题&lt;/title&gt;</span><br><span class="line">        &lt;link rel=<span class="string">"shortcut icon"</span> href=<span class="string">"/favicon.ico"</span>&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        这里开始内容</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari"><a href="#当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari" class="headerlink" title="当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari"></a>当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=”apple-mobile-web-app-capable” content=”yes” /&gt;</span><br></pre></td></tr></table></figure><h3 id="将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式"><a href="#将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式" class="headerlink" title="将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式"></a>将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=”apple-mobile-web-app-status-bar-style” content=”black” /&gt;</span><br><span class="line">&lt;!– 可选default、black、black-translucent –&gt;</span><br></pre></td></tr></table></figure><h2 id="页面窗口自动调整到设备宽度，并禁止用户及缩放页面"><a href="#页面窗口自动调整到设备宽度，并禁止用户及缩放页面" class="headerlink" title="页面窗口自动调整到设备宽度，并禁止用户及缩放页面"></a>页面窗口自动调整到设备宽度，并禁止用户及缩放页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0, minimum-scale=1.0,maximum-scale=1.0, user-scalable=0"</span> /&gt;</span><br></pre></td></tr></table></figure><h3 id="忽略将页面中的数字识别为电话号码"><a href="#忽略将页面中的数字识别为电话号码" class="headerlink" title="忽略将页面中的数字识别为电话号码"></a>忽略将页面中的数字识别为电话号码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=”format-detection” content=”telephone=no” /&gt;</span><br></pre></td></tr></table></figure><h3 id="忽略Android平台中对邮箱地址的识别"><a href="#忽略Android平台中对邮箱地址的识别" class="headerlink" title="忽略Android平台中对邮箱地址的识别"></a>忽略Android平台中对邮箱地址的识别</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=”format-detection” content=”email=no” /&gt;</span><br></pre></td></tr></table></figure><h2 id="禁用a-button-input-optgroup-select-textarea-等标签背景变暗"><a href="#禁用a-button-input-optgroup-select-textarea-等标签背景变暗" class="headerlink" title="禁用a,button,input,optgroup,select,textarea 等标签背景变暗"></a>禁用a,button,input,optgroup,select,textarea 等标签背景变暗</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a,button,input,optgroup,select,textarea&#123;</span><br><span class="line">    -webkit-tap-highlight-color: rgba(0,0,0,0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webkit表单输入框placeholder的颜色值改变："><a href="#webkit表单输入框placeholder的颜色值改变：" class="headerlink" title="webkit表单输入框placeholder的颜色值改变："></a>webkit表单输入框placeholder的颜色值改变：</h2><h3 id="如果想要默认的颜色显示红色，代码如下："><a href="#如果想要默认的颜色显示红色，代码如下：" class="headerlink" title="如果想要默认的颜色显示红色，代码如下："></a>如果想要默认的颜色显示红色，代码如下：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input::-webkit-input-placeholder&#123;color:red;&#125;</span><br></pre></td></tr></table></figure><h3 id="如果想要用户点击变为蓝色，代码如下："><a href="#如果想要用户点击变为蓝色，代码如下：" class="headerlink" title="如果想要用户点击变为蓝色，代码如下："></a>如果想要用户点击变为蓝色，代码如下：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input:focus::-webkit-input-placeholder&#123;color:blue;&#125;</span><br></pre></td></tr></table></figure><h2 id="移动端IOS手机下清除输入框内阴影，代码如下"><a href="#移动端IOS手机下清除输入框内阴影，代码如下" class="headerlink" title="移动端IOS手机下清除输入框内阴影，代码如下"></a>移动端IOS手机下清除输入框内阴影，代码如下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input,textarea &#123;</span><br><span class="line">-webkit-appearance: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在IOS中-禁止长按链接与图片弹出菜单"><a href="#在IOS中-禁止长按链接与图片弹出菜单" class="headerlink" title="在IOS中 禁止长按链接与图片弹出菜单"></a>在IOS中 禁止长按链接与图片弹出菜单</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a, img &#123;</span><br><span class="line">-webkit-touch-callout: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文章:<br>1.<a href="http://web.jobbole.com/85027/" target="_blank" rel="noopener">H5移动端知识点总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;页面通用模板&quot;&gt;&lt;a href=&quot;#页面通用模板&quot; class=&quot;headerlink&quot; title=&quot;页面通用模板&quot;&gt;&lt;/a&gt;页面通用模板&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;meta charset=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;meta content=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;meta content=&lt;span class=&quot;string&quot;&gt;&quot;yes&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;apple-mobile-web-app-capable&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;meta content=&lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;apple-mobile-web-app-status-bar-style&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;meta content=&lt;span class=&quot;string&quot;&gt;&quot;telephone=no&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;format-detection&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;meta content=&lt;span class=&quot;string&quot;&gt;&quot;email=no&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;format-detection&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;title&amp;gt;标题&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;link rel=&lt;span class=&quot;string&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; href=&lt;span class=&quot;string&quot;&gt;&quot;/favicon.ico&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        这里开始内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="html5" scheme="http://yoursite.com/categories/html5/"/>
    
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>前端的几种布局</title>
    <link href="http://yoursite.com/2018/04/23/html%E5%87%A0%E7%A7%8D%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2018/04/23/html几种布局/</id>
    <published>2018-04-22T16:34:56.000Z</published>
    <updated>2018-04-22T17:35:02.080Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前端的几种布局"><a href="#前端的几种布局" class="headerlink" title="前端的几种布局"></a>前端的几种布局</h3><h3 id="流式布局（html网页默认的布局方式）"><a href="#流式布局（html网页默认的布局方式）" class="headerlink" title="流式布局（html网页默认的布局方式）"></a>流式布局（html网页默认的布局方式）</h3><p>1、块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。<br>2、内联元素都会在所处的包含元素内从左到右水平分布显示。（内联元素可不像块状元素这么霸道独占一行）</p><h3 id="浮动布局-float"><a href="#浮动布局-float" class="headerlink" title="浮动布局(float)"></a>浮动布局(float)</h3><p>默认布局下，块状元素这么霸道都是独占一行，如果现在我们想让两个块状元素并排显示。就需要使用float来实现。<br><a id="more"></a></p><h3 id="层模型"><a href="#层模型" class="headerlink" title="层模型"></a>层模型</h3><p>如果我想一个div在另外一个div的上面，我们就需要可以使用绝对定位来完成，层模型的三种定位方式relative、absolute、fixed。</p><h3 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h3><p>经过大型项目实践，下面这段CSS是最好的基于rem和vm和calc实践代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">html &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@media screen and (min-width: 375px) &#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        /* iPhone6的375px尺寸作为16px基准，414px正好18px大小, 600 20px */</span><br><span class="line">        font-size: calc(100% + 2 * (100vw - 375px) / 39);</span><br><span class="line">        font-size: calc(16px + 2 * (100vw - 375px) / 39);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (min-width: 414px) &#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        /* 414px-1000px每100像素宽字体增加1px(18px-22px) */</span><br><span class="line">        font-size: calc(112.5% + 4 * (100vw - 414px) / 586);</span><br><span class="line">        font-size: calc(18px + 4 * (100vw - 414px) / 586);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (min-width: 600px) &#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        /* 600px-1000px每100像素宽字体增加1px(20px-24px) */</span><br><span class="line">        font-size: calc(125% + 4 * (100vw - 600px) / 400);</span><br><span class="line">        font-size: calc(20px + 4 * (100vw - 600px) / 400);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@media screen and (min-width: 1000px) &#123;</span><br><span class="line">    html &#123;</span><br><span class="line">        /* 1000px往后是每100像素0.5px增加 */</span><br><span class="line">        font-size: calc(137.5% + 6 * (100vw - 1000px) / 1000);</span><br><span class="line">        font-size: calc(22px + 6 * (100vw - 1000px) / 1000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，就可以愉快地使用rem单位用来排版和布局啦！</p><h3 id="Flex-弹性布局"><a href="#Flex-弹性布局" class="headerlink" title="Flex 弹性布局"></a>Flex 弹性布局</h3><p>Flexbox 是一维布局系统，适合做局部布局，比如导航栏组件。</p><h3 id="CSS-Grid-网格-布局"><a href="#CSS-Grid-网格-布局" class="headerlink" title="CSS Grid(网格) 布局"></a>CSS Grid(网格) 布局</h3><p>CSS Grid(网格) 布局（又称为 “Grid(网格)” ），是一个二维的基于网格的布局系统它的目标是完全改变我们基于网格的用户界面的布局方式。</p><h2 id="CSS-Grid-网格-布局-1"><a href="#CSS-Grid-网格-布局-1" class="headerlink" title="CSS Grid(网格) 布局"></a>CSS Grid(网格) 布局</h2><p><a href="http://www.css88.com/archives/8506" target="_blank" rel="noopener">5分钟学会 CSS Grid 布局</a><br><a href="http://www.css88.com/archives/8512" target="_blank" rel="noopener">如何使用 CSS Grid 快速而又灵活的布局</a></p><h2 id="Flexbox布局"><a href="#Flexbox布局" class="headerlink" title="Flexbox布局"></a>Flexbox布局</h2><p><a href="http://www.css88.com/archives/7212" target="_blank" rel="noopener">Flexbox布局是如何工作的 – 用大彩图和GIF动画解释</a><br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener">Flex 布局教程：实例篇</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前端的几种布局&quot;&gt;&lt;a href=&quot;#前端的几种布局&quot; class=&quot;headerlink&quot; title=&quot;前端的几种布局&quot;&gt;&lt;/a&gt;前端的几种布局&lt;/h3&gt;&lt;h3 id=&quot;流式布局（html网页默认的布局方式）&quot;&gt;&lt;a href=&quot;#流式布局（html网页默认的布局方式）&quot; class=&quot;headerlink&quot; title=&quot;流式布局（html网页默认的布局方式）&quot;&gt;&lt;/a&gt;流式布局（html网页默认的布局方式）&lt;/h3&gt;&lt;p&gt;1、块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。&lt;br&gt;2、内联元素都会在所处的包含元素内从左到右水平分布显示。（内联元素可不像块状元素这么霸道独占一行）&lt;/p&gt;
&lt;h3 id=&quot;浮动布局-float&quot;&gt;&lt;a href=&quot;#浮动布局-float&quot; class=&quot;headerlink&quot; title=&quot;浮动布局(float)&quot;&gt;&lt;/a&gt;浮动布局(float)&lt;/h3&gt;&lt;p&gt;默认布局下，块状元素这么霸道都是独占一行，如果现在我们想让两个块状元素并排显示。就需要使用float来实现。&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端总结内容</title>
    <link href="http://yoursite.com/2018/04/22/%E5%89%8D%E7%AB%AF%E6%80%BB%E7%BB%93%E5%86%85%E5%AE%B9/"/>
    <id>http://yoursite.com/2018/04/22/前端总结内容/</id>
    <published>2018-04-22T15:49:11.000Z</published>
    <updated>2018-04-23T04:49:45.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><p>span, em, label, input, i, time, b, strong, a, select,textarea…</p><h3 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h3><p>div, p, h1~h6, ul, li, dl, dt, dd, blockquote…</p><h3 id="空元素"><a href="#空元素" class="headerlink" title="空元素"></a>空元素</h3><p>hr, img, link, meta, br, input….<br><a id="more"></a></p><h2 id="CSS实现垂直水平居中"><a href="#CSS实现垂直水平居中" class="headerlink" title="CSS实现垂直水平居中"></a>CSS实现垂直水平居中</h2><h3 id="margin-auto"><a href="#margin-auto" class="headerlink" title="margin:auto"></a>margin:auto</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html --&gt;</span><br><span class="line">&lt;div class=<span class="string">"wrapper"</span>&gt;</span><br><span class="line">     &lt;div class=<span class="string">"content"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- css --&gt;</span><br><span class="line">.wrapper &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 500px;</span><br><span class="line">    height: 500px;</span><br><span class="line"> &#125;</span><br><span class="line">.content&#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    /*top、bottom、left和right 均设置为0*/</span><br><span class="line">    top: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    right: 0;</span><br><span class="line">    /*margin设置为auto*/</span><br><span class="line">    margin:auto;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    position:absolute;            </span><br><span class="line">    width:200px;            </span><br><span class="line">    height:200px;            </span><br><span class="line">    top:50%;            </span><br><span class="line">    left:50%;            </span><br><span class="line">    margin-top:-100px;            </span><br><span class="line">    margin-left:-100px;            </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方法基本浏览器都能够兼容，不足之处就是需要固定宽高。</p><h3 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h3><p>Flex 布局：不考虑兼容老式浏览器的话，用Flex布局简单直观一劳永逸：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display:flex;/*Flex布局*/</span><br><span class="line">    display: -webkit-flex; /* Safari */</span><br><span class="line">    align-items:center;/*指定垂直居中*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display:flex;/*Flex布局*/</span><br><span class="line">    display: -webkit-flex; /* Safari */</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    justify-content: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="display-table-cell"><a href="#display-table-cell" class="headerlink" title="display:table-cell"></a>display:table-cell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display:table-cell;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">    text-align:center;</span><br><span class="line">    width:120px;</span><br><span class="line">    height:120px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行内元素-1"><a href="#行内元素-1" class="headerlink" title="行内元素"></a>行内元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text-align: center;</span><br></pre></td></tr></table></figure><h3 id="块状元素-定宽"><a href="#块状元素-定宽" class="headerlink" title="块状元素(定宽)"></a>块状元素(定宽)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin:auto;</span><br></pre></td></tr></table></figure><h3 id="line-height"><a href="#line-height" class="headerlink" title="line-height"></a>line-height</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;             </span><br><span class="line">    width:100px;             </span><br><span class="line">    height:100px;             </span><br><span class="line">    line-height:100px;             </span><br><span class="line">    text-align:center;             </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="src和href的区别"><a href="#src和href的区别" class="headerlink" title="src和href的区别"></a>src和href的区别</h2><h3 id="href"><a href="#href" class="headerlink" title="href"></a>href</h3><p>是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。</p><h3 id="src"><a href="#src" class="headerlink" title="src"></a>src</h3><p>是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。</p><h3 id="共同点"><a href="#共同点" class="headerlink" title="共同点"></a>共同点</h3><p>当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。</p><h2 id="同步和异步的区别"><a href="#同步和异步的区别" class="headerlink" title="同步和异步的区别"></a>同步和异步的区别</h2><p>同步是阻塞模式，异步是非阻塞模式。</p><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p>同步就是指一个进程在执行某个请求的时候，若该请求需要一段时间才能返回信息，那么这个进程将会一直等待下去，直到收到返回信息才继续执行下去。</p><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><p>异步是指进程不需要一直等下去，而是继续执行下面的操作，不管其他进程的状态。当有消息返回时系统会通知进程进行处理，这样可以提高执行的效率。</p><h2 id="Html5-defer和async的区别"><a href="#Html5-defer和async的区别" class="headerlink" title="Html5 defer和async的区别"></a>Html5 defer和async的区别</h2><h3 id="当浏览器解析到script脚本，没有defer或async时："><a href="#当浏览器解析到script脚本，没有defer或async时：" class="headerlink" title="当浏览器解析到script脚本，没有defer或async时："></a>当浏览器解析到script脚本，没有defer或async时：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"main.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>浏览器会立即加载并执行指定的脚本，“立即”指在渲染该script标签之下的文档元素之前，也就是说不等待后续载入的文档元素，读到就加载并执行。</p><h3 id="当浏览器解析到script脚本，有async时："><a href="#当浏览器解析到script脚本，有async时：" class="headerlink" title="当浏览器解析到script脚本，有async时："></a>当浏览器解析到script脚本，有async时：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=<span class="string">"main.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>浏览器会立即下载脚本，但不妨碍页面中的其他操作，比如下载其他资源或等待加载其他脚本。加载和渲染后续文档元素的过程和main.js的加载与执行并行进行（异步）。</p><h3 id="当浏览器解析到script脚本，有defer时："><a href="#当浏览器解析到script脚本，有defer时：" class="headerlink" title="当浏览器解析到script脚本，有defer时："></a>当浏览器解析到script脚本，有defer时：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script defer=<span class="string">"defer"</span> src=<span class="string">"main.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>表示脚本会被延迟到文档完全被解析和显示之后再执行，加载后续文档元素的过程将和main.js的加载并行进行（异步）。</p><h3 id="哪种更好？"><a href="#哪种更好？" class="headerlink" title="哪种更好？"></a>哪种更好？</h3><p>defer 是最接近我们对于应用脚本加载和执行的要求的。</p><p>async 则是一个乱序执行的主，反正对它来说脚本的加载和执行是紧紧挨着的，所以不管你声明的顺序如何，只要它加载完了就会立刻执行。</p><h2 id="浏览器的内核"><a href="#浏览器的内核" class="headerlink" title="浏览器的内核"></a>浏览器的内核</h2><p>IE: trident内核<br>Firefox：gecko内核<br>Safari：webkit内核<br>Opera：以前是presto内核，Opera现已改用Google Chrome的Blink内核<br>Chrome：Blink(基于webkit，Google与Opera Software共同开发)</p><h2 id="简述一下你对HTML语义化的理解？"><a href="#简述一下你对HTML语义化的理解？" class="headerlink" title="简述一下你对HTML语义化的理解？"></a>简述一下你对HTML语义化的理解？</h2><p>1.正确的标签做正确的事情 </p><p>2.爬虫可以根据文档结构来确定上下文，有利于SEO优化</p><p>3.在无网络情况下不至于排版过于混乱</p><p>4.结构化代码便于开发人员的开发和维护</p><h2 id="sessionStorage-、localStorage-和-cookie-之间的区别"><a href="#sessionStorage-、localStorage-和-cookie-之间的区别" class="headerlink" title="sessionStorage 、localStorage 和 cookie 之间的区别"></a>sessionStorage 、localStorage 和 cookie 之间的区别</h2><p>共同点：用于浏览器端存储的缓存数据</p><p>不同点：</p><p>(1)、存储内容是否发送到服务器端：当设置了Cookie后，数据会发送到服务器端，造成一定的宽带浪费；</p><p>web storage,会将数据保存到本地，不会造成宽带浪费；</p><p>(2)、数据存储大小不同：Cookie数据不能超过4K,适用于会话标识；web storage数据存储可以达到5M;</p><p>(3)、数据存储的有效期限不同：cookie只在设置了Cookid过期时间之前一直有效，即使关闭窗口或者浏览器；</p><p>sessionStorage,仅在关闭浏览器之前有效；localStorage,数据存储永久有效；</p><p>(4)、作用域不同：cookie和localStorage是在同源同窗口中都是共享的；sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；</p><h2 id="Web-Storage与Cookie相比存在的优势："><a href="#Web-Storage与Cookie相比存在的优势：" class="headerlink" title="Web Storage与Cookie相比存在的优势："></a>Web Storage与Cookie相比存在的优势：</h2><p>(1)、存储空间更大：</p><p>IE8下每个独立的存储空间为10M，其他浏览器实现略有不同，但都比Cookie要大很多。</p><p>(2)、存储内容不会发送到服务器：</p><p>当设置了Cookie后，Cookie的内容会随着请求一并发送的服务器，这对于本地存储的数据是一种带宽浪费。而Web Storage中的数据则仅仅是存在本地，不会与服务器发生任何交互。</p><p>(3)、更多丰富易用的接口：</p><p>Web Storage提供了一套更为丰富的接口，如setItem,getItem,removeItem,clear等,使得数据操作更为简便。cookie需要自己封装。</p><p>(4)、独立的存储空间：</p><p>每个域（包括子域）有独立的存储空间，各个存储空间是完全独立的，因此不会造成数据混乱。</p><p>localStorage和sessionStorage使用时使用相同的API：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">localStorage.setItem(&quot;key&quot;,&quot;value&quot;);//以“key”为名称存储一个值“value”</span><br><span class="line"></span><br><span class="line">   localStorage.getItem(&quot;key&quot;);//获取名称为“key”的值</span><br><span class="line"></span><br><span class="line">   localStorage.removeItem(&quot;key&quot;);//删除名称为“key”的信息。</span><br><span class="line"></span><br><span class="line">   localStorage.clear();​//清空localStorage中所有信息</span><br></pre></td></tr></table></figure><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>仿一下京东官网顶部的广告关闭，效果为第一次进入官网会出现广告，然后点击关闭，刷新网页不会再显示广告，但是当清除localStorage存入的数据，刷新网页会再显示广告。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"header"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"header-a"</span>&gt;</span><br><span class="line">        &lt;a href=<span class="string">""</span>&gt;&lt;/a&gt;</span><br><span class="line">        &lt;i class=<span class="string">"close"</span>&gt;x&lt;/i&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;   </span><br><span class="line"></span><br><span class="line">//localStorage方法</span><br><span class="line">&lt;script src=<span class="string">"../js/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">haxi</span></span>()&#123;</span><br><span class="line">        //判断localStorage里有没有isClose</span><br><span class="line">        <span class="keyword">if</span>(localStorage.getItem(<span class="string">"isClose"</span>))&#123;             </span><br><span class="line">            $(<span class="string">".header"</span>).hide();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $(<span class="string">".header"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        //点击关闭隐藏图片存取数据</span><br><span class="line">        $(<span class="string">".close"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">            $(<span class="string">".header"</span>).fadeOut(1000);</span><br><span class="line"></span><br><span class="line">            localStorage.setItem(<span class="string">"isClose"</span>, <span class="string">"1"</span>); </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    haxi();</span><br><span class="line"></span><br><span class="line">    //Cookie方法</span><br><span class="line">&lt;script src=<span class="string">"../js/cookie.js"</span>&gt;&lt;/script&gt;//Cookie函数自己封装引入</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">haxi</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span>(getCookie(<span class="string">"isClose"</span>))&#123;             </span><br><span class="line">            $(<span class="string">".header"</span>).hide();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $(<span class="string">".header"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $(<span class="string">".close"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">            $(<span class="string">".header"</span>).fadeOut(1000);</span><br><span class="line"></span><br><span class="line">            setCookie(<span class="string">"isClose"</span>, <span class="string">"1"</span>,<span class="string">"s10"</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    haxi();</span><br></pre></td></tr></table></figure><h2 id="Ajax的优缺点及工作原理？"><a href="#Ajax的优缺点及工作原理？" class="headerlink" title="Ajax的优缺点及工作原理？"></a>Ajax的优缺点及工作原理？</h2><h3 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法:"></a>定义和用法:</h3><p>AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。Ajax 是一种用于创建快速动态网页的技术。Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。</p><p>传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><p>1.减轻服务器的负担,按需取数据,最大程度的减少冗余请求</p><p>2.局部刷新页面,减少用户心理和实际的等待时间,带来更好的用户体验</p><p>3.基于xml标准化,并被广泛支持,不需安装插件等,进一步促进页面和数据的分离</p><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><p>1.AJAX大量的使用了javascript和ajax引擎,这些取决于浏览器的支持.在编写的时候考虑对浏览器的兼容性.</p><p>2.AJAX只是局部刷新,所以页面的后退按钮是没有用的.</p><p>3.对流媒体还有移动设备的支持不是太好等</p><h3 id="AJAX的工作原理："><a href="#AJAX的工作原理：" class="headerlink" title="AJAX的工作原理："></a>AJAX的工作原理：</h3><p>1.创建ajax对象（XMLHttpRequest/ActiveXObject(Microsoft.XMLHttp)）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var request = new XMLHttpRequest(); // 新建XMLHttpRequest对象</span><br></pre></td></tr></table></figure><p>2.判断数据传输方式(GET/POST)</p><p>3.打开链接 open()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.open(<span class="string">'GET'</span>, <span class="string">'/api/categories’);</span></span><br></pre></td></tr></table></figure><p>4.发送 send()</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.send();</span><br></pre></td></tr></table></figure><p>5.当ajax对象完成第四步（onreadystatechange）数据接收完成，判断http响应状态（status）200-300之间或者304（缓存）执行回调函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">request.onreadystatechange = <span class="function"><span class="title">function</span></span> () &#123; // 状态发生变化时，函数被回调</span><br><span class="line">    <span class="keyword">if</span> (request.readyState === 4) &#123; // 成功完成</span><br><span class="line">        // 判断响应结果:</span><br><span class="line">        <span class="keyword">if</span> (request.status === 200) &#123;</span><br><span class="line">            // 成功，通过responseText拿到响应的文本:</span><br><span class="line">            <span class="built_in">return</span> success(request.responseText);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            // 失败，根据响应码判断失败原因:</span><br><span class="line">            <span class="built_in">return</span> fail(request.status);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        // HTTP请求还在继续...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jquery实现ajax"><a href="#jquery实现ajax" class="headerlink" title="jquery实现ajax"></a>jquery实现ajax</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">'http://www.baidu.com'</span>,</span><br><span class="line">    <span class="built_in">type</span>:<span class="string">'POST'</span>,</span><br><span class="line">    async:<span class="literal">true</span>,</span><br><span class="line">    data:data,</span><br><span class="line">    dataType:<span class="string">'json'</span>,</span><br><span class="line">    jsonp: <span class="string">'callback'</span>,//让jQuery实现JSONP跨域加载数据。</span><br><span class="line">    cache:<span class="literal">true</span>,</span><br><span class="line">    headers:&#123;&#125;,</span><br><span class="line">    beforeSend:<span class="function"><span class="title">function</span></span>()&#123;&#125;,</span><br><span class="line">    success: <span class="function"><span class="title">function</span></span>()&#123;&#125;,</span><br><span class="line">    error:<span class="function"><span class="title">function</span></span>()&#123;&#125;,</span><br><span class="line">    complete:<span class="function"><span class="title">function</span></span>()&#123;&#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="readyState存有-XMLHttpRequest-的状态。从-0-到-4-发生变化。"><a href="#readyState存有-XMLHttpRequest-的状态。从-0-到-4-发生变化。" class="headerlink" title="readyState存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。"></a>readyState存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。</h3><p>0: 请求未初始化<br>1: 服务器连接已建立<br>2: 请求已接收<br>3: 请求处理中<br>4: 请求已完成，且响应已就绪</p><h3 id="status"><a href="#status" class="headerlink" title="status"></a>status</h3><p>200: “OK”</p><p>404: 未找到页面</p><h2 id="jquery中-get-提交和-post-提交的区别"><a href="#jquery中-get-提交和-post-提交的区别" class="headerlink" title="jquery中$.get()提交和$.post()提交的区别"></a>jquery中$.get()提交和$.post()提交的区别</h2><h3 id="相同点：都是异步请求的方式来获取服务端的数据"><a href="#相同点：都是异步请求的方式来获取服务端的数据" class="headerlink" title="相同点：都是异步请求的方式来获取服务端的数据"></a>相同点：都是异步请求的方式来获取服务端的数据</h3><h3 id="异同点："><a href="#异同点：" class="headerlink" title="异同点："></a>异同点：</h3><p>1、请求方式不同：$.get() 方法使用GET方法来进行异步请求的。$.post() 方法使用POST方法来进行异步请求的。</p><p>2、参数传递方式不同：get请求会将参数跟在URL后进行传递，而POST请求则是作为HTTP消息的实体内容发送给Web服务器的，这种传递是对用户不可见的。</p><p>3、数据传输大小不同：get方式传输的数据大小不能超过2KB 而POST要大的多</p><p>4、安全问题： GET 方式请求的数据会被浏览器缓存起来，因此有安全问题。</p><h2 id="请指出document-load和document-ready的区别？"><a href="#请指出document-load和document-ready的区别？" class="headerlink" title="请指出document load和document ready的区别？"></a>请指出document load和document ready的区别？</h2><h3 id="共同点-1"><a href="#共同点-1" class="headerlink" title="共同点:"></a>共同点:</h3><p>这两种事件都代表的是页面文档加载时触发。</p><h3 id="异同点：-1"><a href="#异同点：-1" class="headerlink" title="异同点："></a>异同点：</h3><p>ready 事件的触发，表示文档结构已经加载完成（不包含图片等非文字媒体文件）。</p><p>onload 事件的触发，表示页面包含图片等文件在内的所有元素都加载完成。</p><p>1、我们可以在页面中使用多个document.ready()，但只能使用一次onload()。</p><p>2、document.ready()函数在页面DOM元素加载完以后就会被调用，而onload()函数则要在所有的关联资源（包括图像、音频）加载完毕后才会调用。</p><h2 id="请说出三种减低页面加载时间的方法"><a href="#请说出三种减低页面加载时间的方法" class="headerlink" title="请说出三种减低页面加载时间的方法"></a>请说出三种减低页面加载时间的方法</h2><p>1.压缩css、js文件<br>2.合并js、css文件，减少http请求<br>3.外部js、css文件放在最底下<br>4.减少dom操作，尽可能用变量替代不必要的dom操作</p><h2 id="web前端开发，如何提高页面性能优化？"><a href="#web前端开发，如何提高页面性能优化？" class="headerlink" title="web前端开发，如何提高页面性能优化？"></a>web前端开发，如何提高页面性能优化？</h2><h3 id="内容方面："><a href="#内容方面：" class="headerlink" title="内容方面："></a>内容方面：</h3><p>1.减少 HTTP 请求 (Make Fewer HTTP Requests)</p><p>2.减少 DOM 元素数量 (Reduce the Number of DOM Elements)</p><p>3.使得 Ajax 可缓存 (Make Ajax Cacheable)</p><h3 id="针对CSS-JavaScript："><a href="#针对CSS-JavaScript：" class="headerlink" title="针对CSS,JavaScript："></a>针对CSS,JavaScript：</h3><p>1.把 CSS 放到代码页上端 (Put Stylesheets at the Top)</p><p>2.从页面中剥离 JavaScript 与 CSS (Make JavaScript and CSS External)</p><p>3.精简 JavaScript 与 CSS (Minify JavaScript and CSS)</p><p>4.避免 CSS 表达式 (Avoid CSS Expressions)</p><p>5.移除重复脚本 (Remove Duplicate Scripts)</p><h3 id="面向图片-Image-："><a href="#面向图片-Image-：" class="headerlink" title="面向图片(Image)："></a>面向图片(Image)：</h3><p>1.优化图片</p><p>2 不要在 HTML 中使用缩放图片</p><p>3 使用恰当的图片格式</p><p>4 使用 CSS Sprites 技巧对图片优化</p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="1、写一个function，清除字符串前后的空格。（兼容所有浏览器）"><a href="#1、写一个function，清除字符串前后的空格。（兼容所有浏览器）" class="headerlink" title="1、写一个function，清除字符串前后的空格。（兼容所有浏览器）"></a>1、写一个function，清除字符串前后的空格。（兼容所有浏览器）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> trim(str) &#123;</span><br><span class="line">    <span class="keyword">if</span> (str &amp;&amp; typeof str === <span class="string">"string"</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> str.replace(/(^\s*)|(\s*)$/g,<span class="string">""</span>); //去除前后空白符</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、使用正则表达式验证邮箱格式"><a href="#2、使用正则表达式验证邮箱格式" class="headerlink" title="2、使用正则表达式验证邮箱格式"></a>2、使用正则表达式验证邮箱格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var reg = /^(\w)+(\.\w+)*@(\w)+((\.\w&#123;2,3&#125;)&#123;1,3&#125;)$/;</span><br><span class="line">var email = <span class="string">"example@qq.com"</span>;</span><br><span class="line">console.log(reg.test(email));  // <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;元素&quot;&gt;&lt;a href=&quot;#元素&quot; class=&quot;headerlink&quot; title=&quot;元素&quot;&gt;&lt;/a&gt;元素&lt;/h2&gt;&lt;h3 id=&quot;行内元素&quot;&gt;&lt;a href=&quot;#行内元素&quot; class=&quot;headerlink&quot; title=&quot;行内元素&quot;&gt;&lt;/a&gt;行内元素&lt;/h3&gt;&lt;p&gt;span, em, label, input, i, time, b, strong, a, select,textarea…&lt;/p&gt;
&lt;h3 id=&quot;块级元素&quot;&gt;&lt;a href=&quot;#块级元素&quot; class=&quot;headerlink&quot; title=&quot;块级元素&quot;&gt;&lt;/a&gt;块级元素&lt;/h3&gt;&lt;p&gt;div, p, h1~h6, ul, li, dl, dt, dd, blockquote…&lt;/p&gt;
&lt;h3 id=&quot;空元素&quot;&gt;&lt;a href=&quot;#空元素&quot; class=&quot;headerlink&quot; title=&quot;空元素&quot;&gt;&lt;/a&gt;空元素&lt;/h3&gt;&lt;p&gt;hr, img, link, meta, br, input….&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>css盒子模型</title>
    <link href="http://yoursite.com/2018/04/22/css%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/2018/04/22/css盒子模型/</id>
    <published>2018-04-22T15:07:50.000Z</published>
    <updated>2018-04-22T15:46:59.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是盒子模型"><a href="#什么是盒子模型" class="headerlink" title="什么是盒子模型"></a>什么是盒子模型</h2><p>在html的世界里，元素可以被看成现实中的盒子。一个盒子包括了content（实际内容）、border（边框）、padding（内边距）和margin（外边距）</p><h2 id="盒子模型的两种分类"><a href="#盒子模型的两种分类" class="headerlink" title="盒子模型的两种分类"></a>盒子模型的两种分类</h2><h3 id="标准W3C盒子模型"><a href="#标准W3C盒子模型" class="headerlink" title="标准W3C盒子模型"></a>标准W3C盒子模型</h3><p>W3C定义的盒子模型包括margin、border、padding、content ，元素的width=content的宽度。对于input、button元素默认border-box 。<br>html的文件头部有一个&lt;!DOCTYPE html&gt; ，说明你已经遵循W3C标准盒子模型了。<br><a id="more"></a></p><h3 id="IE盒子模型"><a href="#IE盒子模型" class="headerlink" title="IE盒子模型"></a>IE盒子模型</h3><p>IE盒子模型与W3C的盒子模型唯一区别就是元素的宽度，元素的width=content+padding+border</p><h2 id="两者哪种更好？"><a href="#两者哪种更好？" class="headerlink" title="两者哪种更好？"></a>两者哪种更好？</h2><p>个人认为IE盒子模型，W3C也认识到自己的问题了，所以在CSS3中新增了一个样式box-sizing，包含两个属性content-box 和 border-box。</p><p>（1） content-box  元素的width=content+padding+border（样式指定的宽度是内容的宽度） （默认值，可以不写）<br>（2） border-box   元素的width=width（用样式指定的宽度是盒子的宽度）<br>（3） inherit： 规定应从父元素继承 box-sizing 属性的值。</p><p>当你遵循ie盒子模型时，不管你如何设置padding和border（小于width/2），它只在盒子里面伸缩，不影响整体的宽高。如果padding和border太大，会把内容挤掉的。</p><h2 id="其他需要知道的知识"><a href="#其他需要知道的知识" class="headerlink" title="其他需要知道的知识"></a>其他需要知道的知识</h2><h3 id="margin"><a href="#margin" class="headerlink" title="margin"></a>margin</h3><p>1.对于行内元素来说，设置margin-top,margin-bottom 是无效的，margin-left,margin-right是有效的。</p><p>2.对于相邻的块级元素margin-bottom和margin-top 取值方式</p><p> 1） 都是正数： 取最大值</p><p>   距离=Math.max(margin-botton,margin-top)</p><p> 2） 都是负数： 取最小值</p><p>   距离=Math.min(margin-botton,margin-top)</p><p> 3）上面是正数，下面是负数或者 上面是负数，下面是正数： 正负相加</p><p>   距离=margin-botton+margin-top</p><p>在实际设计中，我们会发现，IE 盒模型更容易进行控制，我们一般先将整个容器的尺寸先确定，然后再填充具体的内容，通过 padding 来调整内容的具体位置，通过 margin 来调整容器与其他元素之间的间隙，无论如何调整，整个容器的结构是固定的，不会改变的；而在标准盒模型中，我们在调整 padding 和 margin 的同时，往往会将容器本身的结构打乱，需要重新设置内容 content 的尺寸<br>所以我一般都会在样式重置中添加 CSS 3 属性：box-sizing: border-box; 可以让元素按照 IE 盒模型进行解析，即设置的宽高包括了 border 以及 padding 的值</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是盒子模型&quot;&gt;&lt;a href=&quot;#什么是盒子模型&quot; class=&quot;headerlink&quot; title=&quot;什么是盒子模型&quot;&gt;&lt;/a&gt;什么是盒子模型&lt;/h2&gt;&lt;p&gt;在html的世界里，元素可以被看成现实中的盒子。一个盒子包括了content（实际内容）、border（边框）、padding（内边距）和margin（外边距）&lt;/p&gt;
&lt;h2 id=&quot;盒子模型的两种分类&quot;&gt;&lt;a href=&quot;#盒子模型的两种分类&quot; class=&quot;headerlink&quot; title=&quot;盒子模型的两种分类&quot;&gt;&lt;/a&gt;盒子模型的两种分类&lt;/h2&gt;&lt;h3 id=&quot;标准W3C盒子模型&quot;&gt;&lt;a href=&quot;#标准W3C盒子模型&quot; class=&quot;headerlink&quot; title=&quot;标准W3C盒子模型&quot;&gt;&lt;/a&gt;标准W3C盒子模型&lt;/h3&gt;&lt;p&gt;W3C定义的盒子模型包括margin、border、padding、content ，元素的width=content的宽度。对于input、button元素默认border-box 。&lt;br&gt;html的文件头部有一个&amp;lt;!DOCTYPE html&amp;gt; ，说明你已经遵循W3C标准盒子模型了。&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>安卓手机的兼容性问题</title>
    <link href="http://yoursite.com/2018/04/22/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/04/22/安卓手机的兼容性问题/</id>
    <published>2018-04-22T14:55:38.000Z</published>
    <updated>2018-04-22T14:59:51.218Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安卓CSS-absolute兼容性问题"><a href="#安卓CSS-absolute兼容性问题" class="headerlink" title="安卓CSS absolute兼容性问题"></a>安卓CSS absolute兼容性问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"position:relative;"</span>&gt;</span><br><span class="line">    &lt;div style=<span class="string">"position:absolute; -webkit-backface-visibility: hidden"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-webkit-backface-visibility: hidden</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安卓CSS-absolute兼容性问题&quot;&gt;&lt;a href=&quot;#安卓CSS-absolute兼容性问题&quot; class=&quot;headerlink&quot; title=&quot;安卓CSS absolute兼容性问题&quot;&gt;&lt;/a&gt;安卓CSS absolute兼容性问题&lt;/h2&gt;&lt;figu
      
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
  </entry>
  
  <entry>
    <title>浏览器页面渲染机制和页面优化</title>
    <link href="http://yoursite.com/2018/04/19/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93%E6%9C%BA%E5%88%B6%E5%92%8C%E9%A1%B5%E9%9D%A2%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/04/19/浏览器页面渲染机制和页面优化/</id>
    <published>2018-04-19T07:22:42.000Z</published>
    <updated>2018-05-05T07:29:09.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浏览器渲染页面过程"><a href="#浏览器渲染页面过程" class="headerlink" title="浏览器渲染页面过程"></a>浏览器渲染页面过程</h2><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fqi01dtluwj30jx0gadgz.jpg" alt=""><br><a id="more"></a></p><h3 id="解析HTML文件，创建DOM树"><a href="#解析HTML文件，创建DOM树" class="headerlink" title="解析HTML文件，创建DOM树"></a>解析HTML文件，创建DOM树</h3><p>自上而下，遇到任何样式（link、style）与脚本（script）都会阻塞（外部样式不阻塞后续外部脚本的加载）。<br>构建CSS Object Model（CSSOM)会阻塞JavaScript的执行。JavaScript的执行也会阻塞DOM的构建。</p><h3 id="解析CSS文件，创建CSS规则树"><a href="#解析CSS文件，创建CSS规则树" class="headerlink" title="解析CSS文件，创建CSS规则树"></a>解析CSS文件，创建CSS规则树</h3><p>四种CSS引入方式的优先级<br>1.就近原则<br>2.理论上：浏览器默认设置&lt;用户设置&lt;外部样式&lt;内联样式&lt;HTML中的style样式<br>3.实际上：内嵌、链接、导入在同一个文件头部，谁离相应的代码近，谁的优先级高</p><p>特定级：id数<em>100+类或伪类数</em>10+tag名称*1</p><h3 id="将CSS与DOM合并，构建渲染树（renderingtree）"><a href="#将CSS与DOM合并，构建渲染树（renderingtree）" class="headerlink" title="将CSS与DOM合并，构建渲染树（renderingtree）"></a>将CSS与DOM合并，构建渲染树（renderingtree）</h3><p>DOM树与HTML一一对应，渲染树会忽略诸如head、display:none的元素</p><p>慎重选择高消耗的样式</p><p>什么CSS属性是高消耗的？就是那些绘制前需要浏览器进行大量计算的属性。</p><p>box-shadows<br>border-radius<br>transparency<br>transforms<br>CSS filters（性能杀手）</p><h3 id="布局和绘制渲染树，重绘（repaint）和重排（reflow）"><a href="#布局和绘制渲染树，重绘（repaint）和重排（reflow）" class="headerlink" title="布局和绘制渲染树，重绘（repaint）和重排（reflow）"></a>布局和绘制渲染树，重绘（repaint）和重排（reflow）</h3><p>布局Layout</p><p>创建渲染树后，下一步就是布局（Layout）,或者叫回流（reflow,relayout），这个过程就是通过渲染树中渲染对象的信息，计算出每一个渲染对象的位置和尺寸，将其安置在浏览器窗口的正确位置，而有些时候我们会在文档布局完成后对DOM进行修改，这时候可能需要重新进行布局，也可称其为回流，本质上还是一个布局的过程，每一个渲染对象都有一个布局或者回流方法，实现其布局或回流。</p><p>对渲染树的布局可以分为全局和局部的，全局即对整个渲染树进行重新布局，如当我们改变了窗口尺寸或方向或者是修改了根元素的尺寸或者字体大小等；而局部布局可以是对渲染树的某部分或某一个渲染对象进行重新布局。</p><p>大多数web应用对DOM的操作都是比较频繁，这意味着经常需要对DOM进行布局和回流，而如果仅仅是一些小改变，就触发整个渲染树的回流，这显然是不好的，为了避免这种情况，浏览器使用了脏位系统，只有一个渲染对象改变了或者某渲染对象及其子渲染对象脏位值为”dirty”时，说明需要回流。</p><p>重排（回流）：若渲染树的一部分更新，且尺寸变化，就会发生重排(只要修改DOM或修改了元素的形状或大小，就会发生重排)。<br>重绘：部分节点需要更新，但不改变其他集合形状。如改变某个元素的颜色，就会发生重绘。 </p><p>1.重绘和重排何时会发生：</p><p>（1）增加或删除DOM节点；<br>（2）display:none（重排并重绘）；visibility:hidden（重排）；<br>（3）移动页面中的元素；<br>（4）增加或修改样式；<br>（5）用户改变窗口大小，滚动页面等。<br>2.如何减少重绘和重排以提升页面性能：<br>（1）不要一个个修改属性，应通过一个class来修改<br>错误写法：div.style.width=”50px”;div.style.top=”60px”;<br>正确写法：div.className+=” modify”;</p><p>（2）clone节点，在副本中修改，然后直接替换当前的节点；<br>（3）若要频繁获取计算后的样式，请暂存起来；<br>（4）降低受影响的节点：在页面顶部插入节点将影响后续所有节点。而绝对定位的元素改变会影响较少的元素；<br>（5）批量添加DOM：多个DOM插入或修改，应组成一个长的字符串后一次性放入DOM。使用innerHTML永远比DOM操作快。（特别注意：innerHTML不会执行字符串中的嵌入脚本，因此不会产生XSS漏洞）。</p><h2 id="脚本处理"><a href="#脚本处理" class="headerlink" title="脚本处理"></a>脚本处理</h2><p>浏览器解析文档，当遇到script标签的时候，会立即解析脚本，停止解析文档（因为JS可能会改动DOM和CSS所以继续解析会造成浪费）。</p><p>如果脚本是外部的，会等待脚本下载完毕，再继续解析文档。现在可以在script标签上增加属性 defer或者async。</p><p>async 属性规定一旦脚本可用，则会异步执行。<br>注释：async 属性仅适用于外部脚本（只有在使用 src 属性时）。<br>注释：有多种执行外部脚本的方法：</p><ul><li>如果 async=”async”：脚本相对于页面的其余部分异步地执行（当页面继续进行解析时，脚本将被执行）<br>乱序为主，（反正对它来说脚本的加载和执行是紧紧挨着的）所以不管你声明的顺序如何，只要它加载完了就会立刻执行。async 对于应用脚本的用处不大，因为它完全不考虑依赖（哪怕是最低级的顺序执行）。</li><li>如果不使用 async 且 defer=”defer”：脚本将在页面完成解析时执行。它是按照加载顺序执行脚本的。</li><li>如果既不使用 async 也不使用 defer：在浏览器继续解析页面之前，立即读取并执行脚本</li></ul><p>脚本解析会将脚本中改变DOM和CSS的地方分别解析出来，追加到DOM Tree和Style Rules上。</p><h2 id="页面渲染优化"><a href="#页面渲染优化" class="headerlink" title="页面渲染优化"></a>页面渲染优化</h2><p>浏览器对上文介绍的关键渲染路径进行了很多优化，针对每一次变化产生尽量少的操作，还有优化判断重新绘制或布局的方式等等。</p><p>在改变文档根元素的字体颜色等视觉性信息时，会触发整个文档的重绘，而改变某元素的字体颜色则只触发特定元素的重绘；改变元素的位置信息会同时触发此元素（可能还包括其兄弟元素或子级元素）的布局和重绘。某些重大改变，如更改文档根元素的字体尺寸，则会触发整个文档的重新布局和重绘，据此及上文所述，推荐以下优化和实践：</p><ol><li>HTML文档结构层次尽量少，最好不深于六层。（代码结构良好）</li><li>脚本尽量后放，放在body标签前即可。</li><li>少量首屏样式内联放在标签内。</li><li>样式结构层次尽量简单。</li><li>在脚本中尽量减少DOM操作，尽量缓存访问DOM的样式信息，避免过度触发回流。</li><li>减少通过JavaScript代码修改元素样式，尽量使用修改class名方式操作样式或动画。</li><li>动画尽量使用在绝对定位或固定定位的元素上,这样不会影响其他元素的布局。</li><li>隐藏在屏幕外，或在页面滚动时，尽量停止动画。</li><li>尽量缓存DOM查找，查找器尽量简洁。</li><li>涉及多域名的网站，可以开启域名预解析。<br>11.避免后代选择符，尽量使用子选择符。原因：子元素匹配符的概率要大于后代元素匹配符。后代选择符;#tp p{} 子选择符：#tp&gt;p{}<br>12.避免使用通配符，举一个例子，.mod .hd *{font-size:14px;} 根据匹配顺序,将首先匹配通配符,也就是说先匹配出通配符,然后匹配.hd（就是要对dom树上的所有节点进行遍历他的父级元素）,然后匹配.mod,这样的性能耗费可想而知.</li></ol><p>参考文章：</p><p>1.<a href="http://caibaojian.com/css-reflow-repaint.html" target="_blank" rel="noopener">优化CSS重排重绘与浏览器性能</a><br>2.<a href="https://www.cnblogs.com/CandyManPing/p/6635008.html" target="_blank" rel="noopener">web页面加载、解析、渲染过程</a><br>3.<a href="http://www.jb51.net/article/105026.htm" target="_blank" rel="noopener">详解浏览器渲染页面过程</a><br>4.<a href="https://www.cnblogs.com/xp796/p/5236945.html" target="_blank" rel="noopener">25种提高网页加载速度的方法和技巧</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浏览器渲染页面过程&quot;&gt;&lt;a href=&quot;#浏览器渲染页面过程&quot; class=&quot;headerlink&quot; title=&quot;浏览器渲染页面过程&quot;&gt;&lt;/a&gt;浏览器渲染页面过程&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tKfTcly1fqi01dtluwj30jx0gadgz.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="html" scheme="http://yoursite.com/categories/html/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>图片懒加载的原理及实现方式</title>
    <link href="http://yoursite.com/2018/04/18/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%8E%9F%E7%90%86%E5%8F%8A%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/04/18/图片懒加载的原理及实现方式/</id>
    <published>2018-04-18T02:30:28.000Z</published>
    <updated>2018-04-20T08:28:36.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么需要图片懒加载？"><a href="#为什么需要图片懒加载？" class="headerlink" title="为什么需要图片懒加载？"></a>为什么需要图片懒加载？</h2><p>正常情况下，浏览器会解析整个HTML代码，然后从上到下依次加载img标签。如果页面很长，隐藏在页面下方的图片其实已经被浏览器加载了。如果用户不向下滚动页面，就没有看到这些图片，相当于白白浪费了图片的流量。</p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><p>当网站需要大量图片（流量消耗很大），“按需加载”。即用户滚动页面时才加载图片。当网速非常快的时候，用户并不能感知懒加载的动作，既省流量又不影响用户浏览。</p><h3 id="图片懒加载的原理"><a href="#图片懒加载的原理" class="headerlink" title="图片懒加载的原理"></a>图片懒加载的原理</h3><p>把img标签上的src属性设置为空或者其它占位图，把图片真正的URL放在另一个属性data-src中，在需要的时候也就是图片进入可视区域的之前，将URL取出放到src中。</p><p>对img标签来说，alt属性是一个必需的属性，它规定在图像无法显示时的替代文本。 data-* 全局属性：构成一类名称为自定义数据属性的属性，可以通过HTMLElement.dataset来访问。</p><a id="more"></a><h2 id="jQuery-lazyload-图片延迟加载插件实现图片懒加载"><a href="#jQuery-lazyload-图片延迟加载插件实现图片懒加载" class="headerlink" title="jQuery.lazyload 图片延迟加载插件实现图片懒加载"></a>jQuery.lazyload 图片延迟加载插件实现图片懒加载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"/static/loading.gif"</span> data-src=<span class="string">"http://真正的图片地址/xxx.jpg"</span>&gt;</span><br></pre></td></tr></table></figure><p>实现原理：页面显示的图片是一个gif加载动画。当页面滚动时，如果图片出现在屏幕中，就利用jQuery把img的src属性替换为data-src的内容，浏览器就会实时加载。</p><p>jQuery 代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;img data-original=<span class="string">"images/1.jpeg"</span> alt=<span class="string">"图片"</span> class=<span class="string">"lazy"</span> /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=<span class="string">"jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"jquery.lazyload.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    $(<span class="string">"img.lazy"</span>).lazyload();</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>原文<a href="https://www.liaoxuefeng.com/article/00151045553343934ba3bb4ed684623b1bf00488231d88d000" target="_blank" rel="noopener">戳这里</a></p><p>jquery.lazyload.js </p><pre><code class="bash"></code></pre><p>参考文章：<br>1.<a href="http://axuebin.com/blog/2017/08/19/javascript-lazyload/" target="_blank" rel="noopener">原生JS实现最简单的图片懒加载</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么需要图片懒加载？&quot;&gt;&lt;a href=&quot;#为什么需要图片懒加载？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要图片懒加载？&quot;&gt;&lt;/a&gt;为什么需要图片懒加载？&lt;/h2&gt;&lt;p&gt;正常情况下，浏览器会解析整个HTML代码，然后从上到下依次加载img标签。如果页面很长，隐藏在页面下方的图片其实已经被浏览器加载了。如果用户不向下滚动页面，就没有看到这些图片，相当于白白浪费了图片的流量。&lt;/p&gt;
&lt;h2 id=&quot;解决方式&quot;&gt;&lt;a href=&quot;#解决方式&quot; class=&quot;headerlink&quot; title=&quot;解决方式&quot;&gt;&lt;/a&gt;解决方式&lt;/h2&gt;&lt;p&gt;当网站需要大量图片（流量消耗很大），“按需加载”。即用户滚动页面时才加载图片。当网速非常快的时候，用户并不能感知懒加载的动作，既省流量又不影响用户浏览。&lt;/p&gt;
&lt;h3 id=&quot;图片懒加载的原理&quot;&gt;&lt;a href=&quot;#图片懒加载的原理&quot; class=&quot;headerlink&quot; title=&quot;图片懒加载的原理&quot;&gt;&lt;/a&gt;图片懒加载的原理&lt;/h3&gt;&lt;p&gt;把img标签上的src属性设置为空或者其它占位图，把图片真正的URL放在另一个属性data-src中，在需要的时候也就是图片进入可视区域的之前，将URL取出放到src中。&lt;/p&gt;
&lt;p&gt;对img标签来说，alt属性是一个必需的属性，它规定在图像无法显示时的替代文本。 data-* 全局属性：构成一类名称为自定义数据属性的属性，可以通过HTMLElement.dataset来访问。&lt;/p&gt;
    
    </summary>
    
      <category term="html5" scheme="http://yoursite.com/categories/html5/"/>
    
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="jquery" scheme="http://yoursite.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>css实现自适应椭圆</title>
    <link href="http://yoursite.com/2018/04/18/css%E5%AE%9E%E7%8E%B0%E8%87%AA%E9%80%82%E5%BA%94%E6%A4%AD%E5%9C%86/"/>
    <id>http://yoursite.com/2018/04/18/css实现自适应椭圆/</id>
    <published>2018-04-18T01:09:42.000Z</published>
    <updated>2018-04-18T02:21:09.115Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何产生一个圆"><a href="#如何产生一个圆" class="headerlink" title="如何产生一个圆"></a>如何产生一个圆</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">background: <span class="comment">#a58;</span></span><br><span class="line">width: 200px;</span><br><span class="line">height: 200px;</span><br><span class="line">border-radius: 100px;/*正方形边长的一半*/</span><br></pre></td></tr></table></figure><h2 id="实现一个自适应的圆或椭圆"><a href="#实现一个自适应的圆或椭圆" class="headerlink" title="实现一个自适应的圆或椭圆"></a>实现一个自适应的圆或椭圆</h2><p>很多时候我们并不愿意给元素指定一个固定的宽高，而是希望它能根据里面的内容自动调整。如果它的宽高相等，就显示一个圆，不等就显示为椭圆。<br><a id="more"></a></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>border-radius是可以单独指定水平和垂直半径，只用一个斜杆（/）分隔两个值即可。最重要的是，这两个值可以接受百分比值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 50% / 50%;</span><br></pre></td></tr></table></figure><p>由于斜杆前后的两个值是一致的，我们可以进一步简化。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 50%;</span><br></pre></td></tr></table></figure><p>只需一行代码就可以产生一个自适应的椭圆了。</p><h2 id="半椭圆"><a href="#半椭圆" class="headerlink" title="半椭圆"></a>半椭圆</h2><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><p>利用border-radius的展开式属性，实现这个效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">border-top-left-radius</span><br><span class="line">border-top-right-radius</span><br><span class="line">border-bottom-left-radius</span><br><span class="line">border-bottom-right-radius</span><br></pre></td></tr></table></figure><p>如果border-radius属性展开式是这样的，那它代表的意思其实是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 300px 300px 300px 300px/300px 300px 300px 300px;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">border-radius: </span><br><span class="line">     左上角水平圆角半径大小 右上角水平圆角半径大小 右下角水平圆角半径大小 </span><br><span class="line">     左下角水平圆角半径大小/左上角垂直圆角半径大小 右上角垂直圆角半径大小 </span><br><span class="line">     右下角垂直圆角半径大小 左下角垂直圆角半径大小;</span><br></pre></td></tr></table></figure><p>一个水平半径和一个垂直半径所夹起的那1/4段圆弧就是我们平时看的的圆角呈现，如下变色显示：</p><p><img src="http://image.zhangxinxu.com/image/blog/201511/2015-11-01_191017-highlight.png" alt=""></p><p>所以如果我想产生一个半椭圆的话，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">border-radius: </span><br><span class="line">     左上角水平圆角半径大小 右上角水平圆角半径大小 右下角水平圆角半径大小 </span><br><span class="line">     左下角水平圆角半径大小/左上角垂直圆角半径大小 右上角垂直圆角半径大小 </span><br><span class="line">     右下角垂直圆角半径大小 左下角垂直圆角半径大小;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 50% / 100% 100% 0 0;/*向上的半圆*/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 100% 0 0 100%;/*向左的半圆*/</span><br></pre></td></tr></table></figure><h2 id="四分之一椭圆"><a href="#四分之一椭圆" class="headerlink" title="四分之一椭圆"></a>四分之一椭圆</h2><p>其中一个角的水平和垂直半径都需要时100%，而其他三个角度不能设置为圆角。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: 100% 0 0 0;/*四分之一半圆*/</span><br></pre></td></tr></table></figure><p>有兴趣的点击<a href="http://www.zhangxinxu.com/wordpress/2015/11/css3-border-radius-tips/" target="_blank" rel="noopener">这里</a>，大神还制作了一个在线体验页面。<a href="http://www.zhangxinxu.com/study/201511/demo-border-radius.html" target="_blank" rel="noopener">这里</a></p><p>膜拜一下！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何产生一个圆&quot;&gt;&lt;a href=&quot;#如何产生一个圆&quot; class=&quot;headerlink&quot; title=&quot;如何产生一个圆&quot;&gt;&lt;/a&gt;如何产生一个圆&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;background: &lt;span class=&quot;comment&quot;&gt;#a58;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;width: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;height: 200px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;border-radius: 100px;/*正方形边长的一半*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;实现一个自适应的圆或椭圆&quot;&gt;&lt;a href=&quot;#实现一个自适应的圆或椭圆&quot; class=&quot;headerlink&quot; title=&quot;实现一个自适应的圆或椭圆&quot;&gt;&lt;/a&gt;实现一个自适应的圆或椭圆&lt;/h2&gt;&lt;p&gt;很多时候我们并不愿意给元素指定一个固定的宽高，而是希望它能根据里面的内容自动调整。如果它的宽高相等，就显示一个圆，不等就显示为椭圆。&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="border-radius" scheme="http://yoursite.com/tags/border-radius/"/>
    
  </entry>
  
  <entry>
    <title>使用git踩过的坑</title>
    <link href="http://yoursite.com/2018/04/17/%E4%BD%BF%E7%94%A8git%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2018/04/17/使用git踩过的坑/</id>
    <published>2018-04-17T07:01:25.000Z</published>
    <updated>2018-04-18T01:27:15.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="提交时报错"><a href="#提交时报错" class="headerlink" title="提交时报错"></a>提交时报错</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ error: failed to push some refs to </span><br><span class="line"><span class="string">'https://github.com/你的GitHub/learn-DI.git'</span></span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>使用这种方式再提交一次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -f origin master</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="提交时会自动忽略node-modules文件"><a href="#提交时会自动忽略node-modules文件" class="headerlink" title="提交时会自动忽略node_modules文件"></a>提交时会自动忽略node_modules文件</h2><h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fqfor6wp97j309m0acmxv.jpg" alt=""></p><p>注释或删除掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dependencies</span></span><br><span class="line">/node_modules</span><br></pre></td></tr></table></figure><p>##在github上预览自己的网页</p><p><a href="https://www.zhihu.com/question/24156818" target="_blank" rel="noopener">https://www.zhihu.com/question/24156818</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;提交时报错&quot;&gt;&lt;a href=&quot;#提交时报错&quot; class=&quot;headerlink&quot; title=&quot;提交时报错&quot;&gt;&lt;/a&gt;提交时报错&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ error: failed to push some refs to &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;https://github.com/你的GitHub/learn-DI.git&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h3&gt;&lt;p&gt;使用这种方式再提交一次&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git push -f origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>html基本知识点</title>
    <link href="http://yoursite.com/2018/04/16/html%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2018/04/16/html基本知识点/</id>
    <published>2018-04-16T10:27:47.000Z</published>
    <updated>2018-04-16T10:32:08.694Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h2><p>这里只是记录一些最基本的，项目中要要特别注意的元素。</p><h3 id="img"><a href="#img" class="headerlink" title="img"></a>img</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"xxxx.jpg"</span> width=<span class="string">"100"</span> height=<span class="string">"100"</span> /&gt;</span><br></pre></td></tr></table></figure><p>图像的名称和尺寸是以属性的形式提供的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Html&quot;&gt;&lt;a href=&quot;#Html&quot; class=&quot;headerlink&quot; title=&quot;Html&quot;&gt;&lt;/a&gt;Html&lt;/h2&gt;&lt;p&gt;这里只是记录一些最基本的，项目中要要特别注意的元素。&lt;/p&gt;
&lt;h3 id=&quot;img&quot;&gt;&lt;a href=&quot;#img&quot; cla
      
    
    </summary>
    
      <category term="html" scheme="http://yoursite.com/categories/html/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>IE兼容angular项目</title>
    <link href="http://yoursite.com/2018/04/16/IE%E5%85%BC%E5%AE%B9angular%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2018/04/16/IE兼容angular项目/</id>
    <published>2018-04-16T05:13:41.000Z</published>
    <updated>2018-04-19T09:41:21.909Z</updated>
    
    <content type="html"><![CDATA[<h2 id="angular-cli-生成的项目默认不能很好的支持IE浏览器"><a href="#angular-cli-生成的项目默认不能很好的支持IE浏览器" class="headerlink" title="@angular/cli 生成的项目默认不能很好的支持IE浏览器"></a>@angular/cli 生成的项目默认不能很好的支持IE浏览器</h2><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><h3 id="polifill-ts文件"><a href="#polifill-ts文件" class="headerlink" title="polifill.ts文件"></a>polifill.ts文件</h3><p>手动安装两个依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install classlist.js --save</span><br><span class="line">$ npm install web-animations-js --save</span><br></pre></td></tr></table></figure><p>装好后，重新ng serve </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;angular-cli-生成的项目默认不能很好的支持IE浏览器&quot;&gt;&lt;a href=&quot;#angular-cli-生成的项目默认不能很好的支持IE浏览器&quot; class=&quot;headerlink&quot; title=&quot;@angular/cli 生成的项目默认不能很好的支持IE浏
      
    
    </summary>
    
      <category term="angular2" scheme="http://yoursite.com/categories/angular2/"/>
    
    
      <category term="angular2" scheme="http://yoursite.com/tags/angular2/"/>
    
  </entry>
  
  <entry>
    <title>angular路由的详解</title>
    <link href="http://yoursite.com/2018/04/14/%E8%B7%AF%E7%94%B1%E7%9A%84%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/04/14/路由的详解/</id>
    <published>2018-04-14T14:29:41.000Z</published>
    <updated>2018-04-18T10:53:51.849Z</updated>
    
    <content type="html"><![CDATA[<h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="使用Angular-Router-导航"><a href="#使用Angular-Router-导航" class="headerlink" title="使用Angular Router 导航"></a>使用Angular Router 导航</h3><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fqd4izqrv0j30um0eygn3.jpg" alt="Angular Router"><br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ng new router --routing //利用routing参数新建一个router项目</span><br></pre></td></tr></table></figure></p><h3 id="angular2-路由的重要概念"><a href="#angular2-路由的重要概念" class="headerlink" title="angular2 路由的重要概念"></a>angular2 路由的重要概念</h3><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fqgj26ouwwj30rc0fgwgz.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;路由&quot;&gt;&lt;a href=&quot;#路由&quot; class=&quot;headerlink&quot; title=&quot;路由&quot;&gt;&lt;/a&gt;路由&lt;/h2&gt;&lt;h3 id=&quot;使用Angular-Router-导航&quot;&gt;&lt;a href=&quot;#使用Angular-Router-导航&quot; class=&quot;headerlink&quot; title=&quot;使用Angular Router 导航&quot;&gt;&lt;/a&gt;使用Angular Router 导航&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fqd4izqrv0j30um0eygn3.jpg&quot; alt=&quot;Angular Router&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="angular2" scheme="http://yoursite.com/categories/angular2/"/>
    
    
      <category term="angular2" scheme="http://yoursite.com/tags/angular2/"/>
    
  </entry>
  
  <entry>
    <title>css3实现切角效果</title>
    <link href="http://yoursite.com/2018/04/13/css3%E5%AE%9E%E7%8E%B0%E5%88%87%E8%A7%92%E6%95%88%E6%9E%9C/"/>
    <id>http://yoursite.com/2018/04/13/css3实现切角效果/</id>
    <published>2018-04-13T15:04:32.000Z</published>
    <updated>2018-04-15T01:41:37.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="切角效果"><a href="#切角效果" class="headerlink" title="切角效果"></a>切角效果</h2><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fqd2n3o5a4j30bu02i0sq.jpg" alt="切角效果"></p><a id="more"></a><h2 id="三种实现方式"><a href="#三种实现方式" class="headerlink" title="三种实现方式"></a>三种实现方式</h2><h3 id="1-使用背景图片"><a href="#1-使用背景图片" class="headerlink" title="1.使用背景图片"></a>1.使用背景图片</h3><p>使用三角形盖住元素的顶角（背景是纯色），或者使用一张或多张已经切过角的图片来作为整个元素的背景。</p><p>使用图片同样可以达到效果，只是难以维护，而且增加了网页的加载时间。</p><h3 id="2-利用css渐变"><a href="#2-利用css渐变" class="headerlink" title="2.利用css渐变"></a>2.利用css渐变</h3><p>CSS3 渐变（gradients）可以让你在两个或多个指定的颜色之间显示平稳的过渡。</p><p>CSS3 定义了两种类型的渐变（gradients）：</p><p>线性渐变（Linear Gradients）- 向下/向上/向左/向右/对角方向<br>径向渐变（Radial Gradients）- 由它们的中心定义</p><p>窍门：渐变可以接受一个角度（比如45deg）作为方向，而且色变的位置信息也可以是绝对的长度值，不受容器尺寸的影响。（假设切角的深度是15px）</p><p>a. 通过一层渐变，实现一个折角效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">background: <span class="comment">#a58;/*回退机制*/</span></span><br><span class="line">/* Safari 5.1 - 6.0 */</span><br><span class="line">background: -webkit-linear-gradient(-45deg, <span class="comment">#f5f7f9 15px, #a58 0);</span></span><br><span class="line">/* Opera 11.1 - 12.0 */</span><br><span class="line">background: -o-linear-gradient(-45deg, <span class="comment">#f5f7f9 15px, #a58 0);</span></span><br><span class="line">/* Firefox 3.6 - 15 */</span><br><span class="line">background: -moz-linear-gradient(-45deg, <span class="comment">#f5f7f9 15px, #a58 0);</span></span><br><span class="line">/* 标准的语法 */</span><br><span class="line">background: linear-gradient(-45deg, <span class="comment">#f5f7f9 15px, #a58 0);</span></span><br></pre></td></tr></table></figure><p>这个渐变需要把一个透明色标放在切角处，然后在相同位置设置另一个色标，并且把它的颜色设置为我们想要的背景色。</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fqcly3fn4fj30eo07eaab.jpg" alt="折角效果"></p><p>b. 通过四层渐变，把四个角都做成切角效果(这里只写了标准形式)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">background: <span class="comment">#a58;/*回退机制*/</span></span><br><span class="line">/* 标准的语法 */</span><br><span class="line">background: </span><br><span class="line">        linear-gradient(135deg, <span class="comment">#f5f7f9 15px, #a58 0) top left,</span></span><br><span class="line">        linear-gradient(-135deg, <span class="comment">#f5f7f9 15px, #a58 0) top right,</span></span><br><span class="line">        linear-gradient(-45deg, <span class="comment">#f5f7f9 15px, #a58 0) bottom right,</span></span><br><span class="line">        linear-gradient(45deg, <span class="comment">#f5f7f9 15px, #a58 0) bottom left;</span></span><br><span class="line">        background-size: 50% 50%;</span><br><span class="line">        background-repeat: no-repeat;</span><br></pre></td></tr></table></figure><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fqcmlgviw0j30eo0km75b.jpg" alt="四个切角"></p><p>c.scss 代码来写</p><p>使用预处理器的mixin可以帮助我们减少代码的重复率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@mixin beveled-corners(<span class="variable">$bg</span>,<span class="variable">$tl</span>:0, <span class="variable">$tr</span>:<span class="variable">$tl</span>, <span class="variable">$br</span>:<span class="variable">$tl</span>, <span class="variable">$bl</span>:<span class="variable">$tr</span>) &#123;</span><br><span class="line">background: <span class="variable">$bg</span>; </span><br><span class="line">background:</span><br><span class="line"> linear-gradient(135deg, transparent <span class="variable">$tl</span>, <span class="variable">$bg</span> 0) top left,</span><br><span class="line"> linear-gradient(-135deg, transparent <span class="variable">$tr</span>, <span class="variable">$bg</span> 0) top right,</span><br><span class="line"> linear-gradient(-45deg, transparent <span class="variable">$br</span>, <span class="variable">$bg</span> 0) bottom right,</span><br><span class="line"> linear-gradient(45deg, transparent <span class="variable">$bl</span>, <span class="variable">$bg</span> 0) bottom left;</span><br><span class="line"> background-size: 50% 50%;</span><br><span class="line"> background-repeat: no-repeat; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在需要的时候，我们就可以直接调用它，并传入 2~5 个参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@include beveled-corners(<span class="comment">#58a, 15px, 5px);</span></span><br></pre></td></tr></table></figure><h3 id="裁切路径-clip-path"><a href="#裁切路径-clip-path" class="headerlink" title="裁切路径 clip-path"></a>裁切路径 clip-path</h3><p>如果用裁切路径将一个元素切出 20px大小(以水平方向度量)的斜面切角，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   background: <span class="comment">#58a; </span></span><br><span class="line">   clip-path: polygon(20px 0, </span><br><span class="line">                calc(100% - 20px) 0, 100% 20px,</span><br><span class="line">                100% calc(100% - 20px), calc(100% - 20px) 100%,</span><br><span class="line">                20px 100%, 0 calc(100% - 20px), 0 20px</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>此种方法局限性在于，如果要改动切角的尺寸，我们需要修改8处！倒是可以使用任意类型的背景。</p><h2 id="弧形切角"><a href="#弧形切角" class="headerlink" title="弧形切角"></a>弧形切角</h2><p>用径向渐变代替线性渐变</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">background: <span class="comment">#a58;</span></span><br><span class="line">background: </span><br><span class="line">        linear-gradient(135deg, <span class="comment">#f5f7f9 9px, #a58 0) top left,</span></span><br><span class="line">        linear-gradient(-135deg, <span class="comment">#f5f7f9 9px, #a58 0) top right,</span></span><br><span class="line">        linear-gradient(-45deg, <span class="comment">#f5f7f9 9px, #a58 0) bottom right,</span></span><br><span class="line">        linear-gradient(45deg, <span class="comment">#f5f7f9 9px, #a58 0) bottom left;</span></span><br><span class="line">        background-size: 50% 50%;</span><br><span class="line">        background-repeat: no-repeat;</span><br></pre></td></tr></table></figure><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fqd2mx16k2j30dq03a0sr.jpg" alt="弧形切角"></p><p>参考文献：</p><p>本博客 css3效果实现部分，参照书籍<a href="http://www.ituring.com.cn/book/1695" target="_blank" rel="noopener">《css揭秘》</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;切角效果&quot;&gt;&lt;a href=&quot;#切角效果&quot; class=&quot;headerlink&quot; title=&quot;切角效果&quot;&gt;&lt;/a&gt;切角效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tNc79ly1fqd2n3o5a4j30bu02i0sq.jpg&quot; alt=&quot;切角效果&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="css3" scheme="http://yoursite.com/categories/css3/"/>
    
    
      <category term="css3" scheme="http://yoursite.com/tags/css3/"/>
    
      <category term="渐变" scheme="http://yoursite.com/tags/%E6%B8%90%E5%8F%98/"/>
    
      <category term="clip-path" scheme="http://yoursite.com/tags/clip-path/"/>
    
  </entry>
  
  <entry>
    <title>糖果按钮</title>
    <link href="http://yoursite.com/2018/04/13/%E7%B3%96%E6%9E%9C%E6%8C%89%E9%92%AE/"/>
    <id>http://yoursite.com/2018/04/13/糖果按钮/</id>
    <published>2018-04-13T07:56:51.000Z</published>
    <updated>2018-04-18T02:24:55.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="糖果色按钮"><a href="#糖果色按钮" class="headerlink" title="糖果色按钮"></a><a href="http://simurai.com/" target="_blank" rel="noopener">糖果色按钮</a></h2><p>参考文献：</p><p>本博客 css3效果实现部分，参照书籍<a href="http://www.ituring.com.cn/book/1695" target="_blank" rel="noopener">《css揭秘》</a></p>]]></content>
    
    <summary type="html">
    
      利用css3实现颜色，形状各异的漂亮糖果按钮
    
    </summary>
    
      <category term="css3" scheme="http://yoursite.com/categories/css3/"/>
    
    
      <category term="css3" scheme="http://yoursite.com/tags/css3/"/>
    
      <category term="border-radius" scheme="http://yoursite.com/tags/border-radius/"/>
    
  </entry>
  
  <entry>
    <title>使用gulp构建前端项目详解</title>
    <link href="http://yoursite.com/2018/04/13/%E4%BD%BF%E7%94%A8gulp%E6%9E%84%E5%BB%BA%E5%89%8D%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <id>http://yoursite.com/2018/04/13/使用gulp构建前端工作流/</id>
    <published>2018-04-13T04:24:54.000Z</published>
    <updated>2018-04-13T07:10:21.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建Webpack-json文件"><a href="#创建Webpack-json文件" class="headerlink" title="创建Webpack.json文件"></a>创建Webpack.json文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm init</span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp --save-dev</span><br></pre></td></tr></table></figure><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install gulp-uglify gulp-cssnano gulp-sass gulp-file-include browser-sync </span><br><span class="line">gulp-watch-path stream-combiner2 gulp-sourcemaps gulp-minify-css </span><br><span class="line">gulp-autoprefixer gulp-less gulp-ruby-sass gulp-imagemin gulp-imagemin</span><br><span class="line">gulp-rename gulp-autoprefixer gulp-util --save-dev</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="构建初始目录和文件"><a href="#构建初始目录和文件" class="headerlink" title="构建初始目录和文件"></a>构建初始目录和文件</h2><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fqaytxxlrhj30cc0lggmw.jpg" alt="构建初始目录和文件"></p><h2 id="安装mkdirp插件"><a href="#安装mkdirp插件" class="headerlink" title="安装mkdirp插件"></a>安装mkdirp插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install mkdirp --save-dev</span><br></pre></td></tr></table></figure><h2 id="执行初始化，自动创建了对应src目录结构"><a href="#执行初始化，自动创建了对应src目录结构" class="headerlink" title="执行初始化，自动创建了对应src目录结构"></a>执行初始化，自动创建了对应src目录结构</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gulp init</span><br></pre></td></tr></table></figure><h2 id="项目下的配置文件"><a href="#项目下的配置文件" class="headerlink" title="项目下的配置文件"></a>项目下的配置文件</h2><h3 id="gulpfile-js"><a href="#gulpfile-js" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var init = require(<span class="string">'./build/gulpfile.init.js'</span>);</span><br><span class="line">var prod = require(<span class="string">'./build/gulpfile.prod.js'</span>);</span><br><span class="line">var dev = require(<span class="string">'./build/gulpfile.dev.js'</span>);</span><br><span class="line"></span><br><span class="line">init();</span><br><span class="line">prod();</span><br><span class="line">dev();</span><br></pre></td></tr></table></figure><h3 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">"es5"</span>: <span class="literal">true</span>,    </span><br><span class="line">  <span class="string">"node"</span>: <span class="literal">true</span>,</span><br><span class="line">//</span><br><span class="line">// 强制选项</span><br><span class="line">//</span><br><span class="line">    // When <span class="built_in">set</span> to <span class="literal">true</span>, these options will make JSHint produce more warnings about your code.</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 是否阻止位运算符的使用</span><br><span class="line">     *</span><br><span class="line">     * 有时候为了快速取整或判断，会使用一些位运算符，所以此项设置为 <span class="literal">false</span></span><br><span class="line">     */</span><br><span class="line">    <span class="string">"bitwise"</span>: <span class="literal">false</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 是否要求变量都使用驼峰命名</span><br><span class="line">     *</span><br><span class="line">     * 默认开启</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"camelcase"</span>: <span class="literal">false</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 是否要求 <span class="keyword">for</span>/<span class="keyword">while</span>/<span class="keyword">if</span> 等循环和条件语句中总是使用花括号</span><br><span class="line">     *</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"curly"</span>: <span class="literal">false</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 是否强制使用严格等号</span><br><span class="line">     *</span><br><span class="line">     * 有时候需要判断 null，所以默认不严格要求</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"eqeqeq"</span>: <span class="literal">false</span>,</span><br><span class="line">    /**</span><br><span class="line">     * <span class="literal">true</span>: 默认要求所有函数运行在ES5</span><br><span class="line">     * 弃用</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"es3"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"es5"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"esnext"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 选择ES版本，3,5,6</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"esversion"</span>: 5,</span><br><span class="line">    /**</span><br><span class="line">     * <span class="keyword">for</span>-in 语句是否要求过滤原型链上的对象</span><br><span class="line">     *</span><br><span class="line">     * 默认打开</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"forin"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 是否阻止修改或拓展基本对象（Array、Date 等）的原型链</span><br><span class="line">     *</span><br><span class="line">     * 原型链污染比较危险，默认打开</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"freeze"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 变量只能在函数域上定义，在代码块上定义的变量给出警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"funcscope"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 当使用JS保留字时，显示警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"futurehostile"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">    *这个选项可以用来指定一个没有正式定义的全局变量的白名单。配置 globals在单个文件,看看内联配置.</span><br><span class="line">    */</span><br><span class="line">    <span class="string">"globals"</span>: &#123;</span><br><span class="line">        <span class="string">"define"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"module"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"export"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"console"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 是否要求自执行的方法使用括号括起  (<span class="function"><span class="title">function</span></span> () &#123; &#125; ());</span><br><span class="line">     * 默认打开</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"immed"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 指定tab缩进宽度为 2 个空格</span><br><span class="line">     *</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"indent"</span>: 2,</span><br><span class="line">    /**</span><br><span class="line">     * 要求变量在使用前声明，</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"latedef"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 代码块嵌套深度</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"maxdepth"</span>: 2,</span><br><span class="line">    /**</span><br><span class="line">     * 最大错误提示数量，默认50</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"maxerr"</span>: 50,</span><br><span class="line">    /**</span><br><span class="line">     * 单行最大长度</span><br><span class="line">     *</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"maxlen"</span>: 50,</span><br><span class="line">    /**</span><br><span class="line">     * 设置函数正式参数的最大数量</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"maxparams"</span>: 4,</span><br><span class="line">    /**</span><br><span class="line">     * 一个函数内声明语句的最大数量</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"maxstatements"</span>: 4,</span><br><span class="line">    /**</span><br><span class="line">     * 要求构造函数大写</span><br><span class="line">     *</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"newcap"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不允许使用 arguments.callee 和 arguments.caller</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"noarg"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不允许使用逗号</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"nocomma"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不允许空的代码快，默认关闭</span><br><span class="line">     *</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"noempty"</span>: <span class="literal">false</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不允许使用 <span class="string">"non-breaking whitespace"</span>。</span><br><span class="line">     *</span><br><span class="line">     * 这些字符在非 UTF8 页面会导致代码失效</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"nonbsp"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 阻止直接使用 new 调用构造函数的语句（不赋值对象）</span><br><span class="line">     *</span><br><span class="line">     * // OK</span><br><span class="line">     * var a = new Animal();</span><br><span class="line">     *</span><br><span class="line">     * // Warn</span><br><span class="line">     * new Animal();</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"nonew"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 阻止直接使用 typeof 操作符</span><br><span class="line">     *</span><br><span class="line">     * 慎用</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"notypeof"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">    * 字符串引号</span><br><span class="line">    *</span><br><span class="line">    * 默认要求使用单引号</span><br><span class="line">    <span class="literal">true</span>-- 代码字符串禁止单引号双引号混用,</span><br><span class="line">    <span class="string">"single"</span>--只允许单引号</span><br><span class="line">    <span class="string">"double"</span>--只允许双引号。</span><br><span class="line">    * 弃用，见jscs项目</span><br><span class="line">    */</span><br><span class="line">    <span class="string">"quotmark"</span>: <span class="string">"single"</span>,</span><br><span class="line">    /**</span><br><span class="line">    * 隐藏式声明</span><br><span class="line">    *</span><br><span class="line">    <span class="string">"inner"</span> - check <span class="keyword">for</span> variables defined <span class="keyword">in</span> the same scope only</span><br><span class="line">    <span class="string">"outer"</span> - check <span class="keyword">for</span> variables defined <span class="keyword">in</span> outer scopes as well</span><br><span class="line">    <span class="literal">false</span> - same as inner</span><br><span class="line">    <span class="literal">true</span> - allow variable shadowing</span><br><span class="line">    */</span><br><span class="line">    <span class="string">"shadow"</span>: <span class="string">"inner"</span>,</span><br><span class="line">    /**</span><br><span class="line">     *  禁止在不必要的时候使用分组运算符</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"singleGroups"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 是要求否以 strict 模式检查</span><br><span class="line">     *</span><br><span class="line">     * 该选项要求文件有 <span class="string">"use strict;"</span>不全局要求，需要的模块自行开启</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"strict"</span>: <span class="literal">false</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 提示未定义的变量</span><br><span class="line">     *</span><br><span class="line">     * 未定义的变量会容易造成全局变量，该项开启</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"undef"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 提示未使用的变量</span><br><span class="line">     * vars - to only check <span class="keyword">for</span> variables, not <span class="keyword">function</span> parameters</span><br><span class="line">     * strict - to check all variables and parameters.</span><br><span class="line">     * 默认开启</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"unused"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 是否禁止使用var</span><br><span class="line">     * Use `<span class="built_in">let</span>` or `const` instead.</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"varstmt"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">//Relaxing options</span><br><span class="line">//</span><br><span class="line">    //When <span class="built_in">set</span> to <span class="literal">true</span>, these options will make JSHint produce fewer warnings about your code.</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 不显示缺少分号警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"asi"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     *  不显示在 比较处使用了赋值 的警告信息。</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"boss"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示代码中使用的 debugger 语句默认给出的警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * This option tells JSHint that your code uses ES3 array elision elements, or empty elements (<span class="keyword">for</span> example, [1, , , 4, , , 7]).</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"elision"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示关于 == null的警告</span><br><span class="line">     * 当您想要检查变量是否为空或未定义时，这种比较往往很有用。</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"eqnull"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示关于 <span class="built_in">eval</span> 的警告</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"evil"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示 在应该使用复制或函数调用的地方使用了表达式 的警告。</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"expr"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示缺少分号的警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"lastsemic"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示不安全的折行的警告</span><br><span class="line">     *</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"laxbreak"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示逗号放前面的警告，例如：</span><br><span class="line">     *</span><br><span class="line">     * 弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"laxcomma"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示 在循环语句中定义函数 的警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"loopfunc"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不显示 多行字符串 的警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"multistr"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 不允许使用 ++ 和 -- 运算符</span><br><span class="line">     *</span><br><span class="line">     * 默认关闭</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"plusplus"</span>: <span class="literal">false</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 禁止关于__proto__属性的警告</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"proto"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     *  <span class="literal">true</span>: Prohibit use of empty blocks</span><br><span class="line">     *  该选项控制形如 person[<span class="string">'name'</span>] vs. person.name的警告信息的显示</span><br><span class="line">     *  弃用，见jscs项目</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"sub"</span>: <span class="literal">true</span>,</span><br><span class="line">//</span><br><span class="line">// Environments</span><br><span class="line">//</span><br><span class="line">    // These options <span class="built_in">let</span> JSHint know about some pre-defined global variables.</span><br><span class="line">    /**</span><br><span class="line">     * 暴露浏览器属性的全局变量，列如 window,document;</span><br><span class="line">    注意:这个选项不暴露变量 alert或 console。</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"browser"</span>: <span class="literal">true</span>,</span><br><span class="line">    /**</span><br><span class="line">     * 这个选项定义全局暴露的jQuery库。</span><br><span class="line">     */</span><br><span class="line">    <span class="string">"jquery"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="build文件下的子文件"><a href="#build文件下的子文件" class="headerlink" title="build文件下的子文件"></a>build文件下的子文件</h2><h3 id="gulpfile-config-js"><a href="#gulpfile-config-js" class="headerlink" title="gulpfile.config.js"></a>gulpfile.config.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by Cnly小姐 on 2018/4/13.</span><br><span class="line"> */</span><br><span class="line">var SRC_DIR = <span class="string">'./src/'</span>;     // 源文件目录  </span><br><span class="line">var DIST_DIR = <span class="string">'./dist/'</span>;   // 文件处理后存放的目录  </span><br><span class="line">var DIST_FILES = DIST_DIR + <span class="string">'**'</span>; // 目标路径下的所有文件  </span><br><span class="line"></span><br><span class="line">var Config = &#123;</span><br><span class="line">    src: SRC_DIR,</span><br><span class="line">    dist: DIST_DIR,</span><br><span class="line">    dist_files: DIST_FILES,</span><br><span class="line">    html: &#123;  </span><br><span class="line">        dir: SRC_DIR,</span><br><span class="line">        src: SRC_DIR + <span class="string">'*.html'</span>,  </span><br><span class="line">        dist: DIST_DIR  </span><br><span class="line">    &#125;,  </span><br><span class="line">    assets: &#123;  </span><br><span class="line">        dir: SRC_DIR + <span class="string">'assets'</span>,</span><br><span class="line">        src: SRC_DIR + <span class="string">'assets/**/*'</span>,            // assets目录：./src/assets  </span><br><span class="line">        dist: DIST_DIR + <span class="string">'assets'</span>                // assets文件build后存放的目录：./dist/assets  </span><br><span class="line">    &#125;,  </span><br><span class="line">    css: &#123;  </span><br><span class="line">        dir: SRC_DIR + <span class="string">'css'</span>,</span><br><span class="line">        src: SRC_DIR + <span class="string">'css/**/*.css'</span>,           // CSS目录：./src/css/  </span><br><span class="line">        dist: DIST_DIR + <span class="string">'css'</span>                   // CSS文件build后存放的目录：./dist/css  </span><br><span class="line">    &#125;,  </span><br><span class="line">    sass: &#123;  </span><br><span class="line">        dir: SRC_DIR + <span class="string">'sass'</span>,</span><br><span class="line">        src: SRC_DIR + <span class="string">'sass/**/*.scss'</span>,         // SASS目录：./src/sass/  </span><br><span class="line">        dist: DIST_DIR + <span class="string">'css'</span>                   // SASS文件生成CSS后存放的目录：./dist/css  </span><br><span class="line">    &#125;,  </span><br><span class="line">    js: &#123;  </span><br><span class="line">        dir: SRC_DIR + <span class="string">'js'</span>,</span><br><span class="line">        src: SRC_DIR + <span class="string">'js/**/*.js'</span>,             // JS目录：./src/js/  </span><br><span class="line">        dist: DIST_DIR + <span class="string">'js'</span>,                   // JS文件build后存放的目录：./dist/js  </span><br><span class="line">        build_name: <span class="string">'build.js'</span>                   // 合并后的js的文件名  </span><br><span class="line">    &#125;,  </span><br><span class="line">    img: &#123;  </span><br><span class="line">        dir: SRC_DIR + <span class="string">'images'</span>,</span><br><span class="line">        src: SRC_DIR + <span class="string">'images/**/*'</span>,            // images目录：./src/images/  </span><br><span class="line">        dist: DIST_DIR + <span class="string">'images'</span>                // images文件build后存放的目录：./dist/images  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">module.exports = Config;</span><br></pre></td></tr></table></figure><h3 id="gulpfile-dev-js"><a href="#gulpfile-dev-js" class="headerlink" title="gulpfile.dev.js"></a>gulpfile.dev.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by Cnly小姐 on 2018/4/13.</span><br><span class="line"> */</span><br><span class="line">var gulp = require(<span class="string">'gulp'</span>);</span><br><span class="line">var autoprefixer = require(<span class="string">'gulp-autoprefixer'</span>); // 处理css中浏览器兼容的前缀  </span><br><span class="line">var rename = require(<span class="string">'gulp-rename'</span>); //重命名  </span><br><span class="line">var cssnano = require(<span class="string">'gulp-cssnano'</span>); // css的层级压缩合并</span><br><span class="line">var sass = require(<span class="string">'gulp-sass'</span>); //sass</span><br><span class="line">var jshint = require(<span class="string">'gulp-jshint'</span>); //js检查 ==&gt; npm install --save-dev jshint gulp-jshint（.jshintrc：https://my.oschina.net/wjj328938669/blog/637433?p=1）  </span><br><span class="line">var uglify = require(<span class="string">'gulp-uglify'</span>); //js压缩  </span><br><span class="line">var concat = require(<span class="string">'gulp-concat'</span>); //合并文件  </span><br><span class="line">var imagemin = require(<span class="string">'gulp-imagemin'</span>); //图片压缩 </span><br><span class="line">var browserSync = require(<span class="string">'browser-sync'</span>).create();</span><br><span class="line">var reload = browserSync.reload;</span><br><span class="line">var Config = require(<span class="string">'./gulpfile.config.js'</span>);</span><br><span class="line">//======= gulp dev 开发环境下 ===============</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">dev</span></span>() &#123;</span><br><span class="line">    /** </span><br><span class="line">     * HTML处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'html:dev'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.html.src).pipe(gulp.dest(Config.html.dist)).pipe(reload(&#123;</span><br><span class="line">            stream: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * assets文件夹下的所有文件处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'assets:dev'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.assets.src).pipe(gulp.dest(Config.assets.dist)).pipe(reload(&#123;</span><br><span class="line">            stream: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * CSS样式处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'css:dev'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.css.src).pipe(gulp.dest(Config.css.dist)).pipe(reload(&#123;</span><br><span class="line">            stream: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * SASS样式处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'sass:dev'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.sass.src).pipe(sass()).pipe(gulp.dest(Config.sass.dist)).pipe(reload(&#123;</span><br><span class="line">            stream: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * js处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'js:dev'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.js.src).pipe(jshint(<span class="string">'.jshintrc'</span>)).pipe(jshint.reporter(<span class="string">'default'</span>)).pipe(gulp.dest(Config.js.dist)).pipe(reload(&#123;</span><br><span class="line">            stream: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * 图片处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'images:dev'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.img.src).pipe(imagemin(&#123;</span><br><span class="line">            optimizationLevel: 3</span><br><span class="line">            , progressive: <span class="literal">true</span></span><br><span class="line">            , interlaced: <span class="literal">true</span></span><br><span class="line">        &#125;)).pipe(gulp.dest(Config.img.dist)).pipe(reload(&#123;</span><br><span class="line">            stream: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">    gulp.task(<span class="string">'dev'</span>, [<span class="string">'html:dev'</span>, <span class="string">'css:dev'</span>, <span class="string">'sass:dev'</span>, <span class="string">'js:dev'</span>, <span class="string">'assets:dev'</span>, <span class="string">'images:dev'</span>], <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        browserSync.init(&#123;</span><br><span class="line">            server: &#123;</span><br><span class="line">                baseDir: Config.dist</span><br><span class="line">            &#125;</span><br><span class="line">            , notify: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">        // Watch .html files  </span><br><span class="line">        gulp.watch(Config.html.src, [<span class="string">'html:dev'</span>]);</span><br><span class="line">        // Watch .css files  </span><br><span class="line">        gulp.watch(Config.css.src, [<span class="string">'css:dev'</span>]);</span><br><span class="line">        // Watch .scss files  </span><br><span class="line">        gulp.watch(Config.sass.src, [<span class="string">'sass:dev'</span>]);</span><br><span class="line">        // Watch assets files  </span><br><span class="line">        gulp.watch(Config.assets.src, [<span class="string">'assets:dev'</span>]);</span><br><span class="line">        // Watch .js files  </span><br><span class="line">        gulp.watch(Config.js.src, [<span class="string">'js:dev'</span>]);</span><br><span class="line">        // Watch image files  </span><br><span class="line">        gulp.watch(Config.img.src, [<span class="string">'images:dev'</span>]);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">//======= gulp dev 开发环境下 ===============</span><br><span class="line">module.exports = dev;</span><br></pre></td></tr></table></figure><h3 id="gulpfile-init-js"><a href="#gulpfile-init-js" class="headerlink" title="gulpfile.init.js"></a>gulpfile.init.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by Cnly小姐 on 2018/4/13.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">var gulp = require(<span class="string">'gulp'</span>);</span><br><span class="line">var mkdirp = require(<span class="string">'mkdirp'</span>);</span><br><span class="line">var Config = require(<span class="string">'./gulpfile.config.js'</span>);</span><br><span class="line">//======= gulp init 初始化项目结构 ===============</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    /** </span><br><span class="line">     * 初始化项目结构</span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'init'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        var <span class="built_in">dirs</span> = [Config.html.dir, Config.assets.dir, Config.css.dir, Config.sass.dir, Config.js.dir, Config.img.dir];</span><br><span class="line">        dirs.forEach(dir =&gt; &#123;</span><br><span class="line">            mkdirp.sync(dir);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">module.exports = init;</span><br></pre></td></tr></table></figure><h3 id="gulpfile-prod-js"><a href="#gulpfile-prod-js" class="headerlink" title="gulpfile.prod.js"></a>gulpfile.prod.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Created by Cnly小姐 on 2018/4/13.</span><br><span class="line"> */</span><br><span class="line">var gulp = require(<span class="string">'gulp'</span>);</span><br><span class="line">var autoprefixer = require(<span class="string">'gulp-autoprefixer'</span>); // 处理css中浏览器兼容的前缀  </span><br><span class="line">var rename = require(<span class="string">'gulp-rename'</span>); //重命名  </span><br><span class="line">var cssnano = require(<span class="string">'gulp-cssnano'</span>); // css的层级压缩合并</span><br><span class="line">var sass = require(<span class="string">'gulp-sass'</span>); //sass</span><br><span class="line">var jshint = require(<span class="string">'gulp-jshint'</span>); //js检查 ==&gt; npm install --save-dev jshint gulp-jshint（.jshintrc：https://my.oschina.net/wjj328938669/blog/637433?p=1）  </span><br><span class="line">var uglify = require(<span class="string">'gulp-uglify'</span>); //js压缩  </span><br><span class="line">var concat = require(<span class="string">'gulp-concat'</span>); //合并文件  </span><br><span class="line">var imagemin = require(<span class="string">'gulp-imagemin'</span>); //图片压缩 </span><br><span class="line">var Config = require(<span class="string">'./gulpfile.config.js'</span>);</span><br><span class="line">var fileinclude = require(<span class="string">'gulp-file-include'</span>);//公共html</span><br><span class="line">//======= gulp build 打包资源 ===============</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">prod</span></span>() &#123;</span><br><span class="line">    /** </span><br><span class="line">     * HTML处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'html'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.html.src).pipe(gulp.dest(Config.html.dist));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * assets文件夹下的所有文件处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'assets'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.assets.src).pipe(gulp.dest(Config.assets.dist));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * CSS样式处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'css'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.css.src).pipe(autoprefixer(<span class="string">'last 2 version'</span>)).pipe(gulp.dest(Config.css.dist)).pipe(rename(&#123;</span><br><span class="line">                suffix: <span class="string">'.min'</span></span><br><span class="line">            &#125;)).pipe(cssnano()) //执行压缩  </span><br><span class="line">            .pipe(gulp.dest(Config.css.dist));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * SASS样式处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.sass.src).pipe(autoprefixer(<span class="string">'last 2 version'</span>)).pipe(sass()).pipe(gulp.dest(Config.sass.dist)).pipe(rename(&#123;</span><br><span class="line">                suffix: <span class="string">'.min'</span></span><br><span class="line">            &#125;)) //rename压缩后的文件名  </span><br><span class="line">            .pipe(cssnano()) //执行压缩  </span><br><span class="line">            .pipe(gulp.dest(Config.sass.dist));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * js处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'js'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.js.src).pipe(jshint(<span class="string">'.jshintrc'</span>)).pipe(jshint.reporter(<span class="string">'default'</span>)).pipe(gulp.dest(Config.js.dist)).pipe(rename(&#123;</span><br><span class="line">            suffix: <span class="string">'.min'</span></span><br><span class="line">        &#125;)).pipe(uglify()).pipe(gulp.dest(Config.js.dist));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * 合并所有js文件并做压缩处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'js-concat'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.js.src).pipe(jshint(<span class="string">'.jshintrc'</span>)).pipe(jshint.reporter(<span class="string">'default'</span>)).pipe(concat(Config.js.build_name)).pipe(gulp.dest(Config.js.dist)).pipe(rename(&#123;</span><br><span class="line">            suffix: <span class="string">'.min'</span></span><br><span class="line">        &#125;)).pipe(uglify()).pipe(gulp.dest(Config.js.dist));</span><br><span class="line">    &#125;);</span><br><span class="line">    /** </span><br><span class="line">     * 图片处理 </span><br><span class="line">     */</span><br><span class="line">    gulp.task(<span class="string">'images'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="built_in">return</span> gulp.src(Config.img.src).pipe(imagemin(&#123;</span><br><span class="line">            optimizationLevel: 3</span><br><span class="line">            , progressive: <span class="literal">true</span></span><br><span class="line">            , interlaced: <span class="literal">true</span></span><br><span class="line">        &#125;)).pipe(gulp.dest(Config.img.dist));</span><br><span class="line">    &#125;);</span><br><span class="line">  </span><br><span class="line">    gulp.task(<span class="string">'build'</span>, [<span class="string">'html'</span>, <span class="string">'css'</span>, <span class="string">'sass'</span>, <span class="string">'js'</span>, <span class="string">'assets'</span>, <span class="string">'images'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">module.exports = prod;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建Webpack-json文件&quot;&gt;&lt;a href=&quot;#创建Webpack-json文件&quot; class=&quot;headerlink&quot; title=&quot;创建Webpack.json文件&quot;&gt;&lt;/a&gt;创建Webpack.json文件&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装依赖&quot;&gt;&lt;a href=&quot;#安装依赖&quot; class=&quot;headerlink&quot; title=&quot;安装依赖&quot;&gt;&lt;/a&gt;安装依赖&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install gulp --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装模块&quot;&gt;&lt;a href=&quot;#安装模块&quot; class=&quot;headerlink&quot; title=&quot;安装模块&quot;&gt;&lt;/a&gt;安装模块&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install gulp-uglify gulp-cssnano gulp-sass gulp-file-include browser-sync &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-watch-path stream-combiner2 gulp-sourcemaps gulp-minify-css &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-autoprefixer gulp-less gulp-ruby-sass gulp-imagemin gulp-imagemin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp-rename gulp-autoprefixer gulp-util --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="gulp" scheme="http://yoursite.com/categories/gulp/"/>
    
    
      <category term="gulp" scheme="http://yoursite.com/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>angular-cli 的使用攻略</title>
    <link href="http://yoursite.com/2018/04/13/angular-cli%E7%9A%84%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5/"/>
    <id>http://yoursite.com/2018/04/13/angular-cli的使用攻略/</id>
    <published>2018-04-13T03:49:29.000Z</published>
    <updated>2018-04-23T12:38:59.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="angular-cli"><a href="#angular-cli" class="headerlink" title="angular-cli"></a><a href="https://cli.angular.io/" target="_blank" rel="noopener">angular-cli</a></h2><p>angular-cli 是一套脚手架工具</p><h2 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 <a href="http://nodejs.cn/" target="_blank" rel="noopener">node.js</a></h2><p>也可以安装 npm 淘宝镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="安装angular-cli"><a href="#安装angular-cli" class="headerlink" title="安装angular-cli"></a>安装angular-cli</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cnpm install -g @angular/cli</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fqawm7qb9vj30oi0bwdjd.jpg" alt="angular-cli"><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fqawmrorn9j30pe0ou0vn.jpg" alt="angular-cli"></p><h3 id="angular-cli-版本升级"><a href="#angular-cli-版本升级" class="headerlink" title="angular-cli 版本升级"></a>angular-cli 版本升级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install npm -g</span><br></pre></td></tr></table></figure><h2 id="angular-cli-命令行工具"><a href="#angular-cli-命令行工具" class="headerlink" title="angular-cli 命令行工具"></a>angular-cli 命令行工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ng new xxxx //创建名为xxx的新项目</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ng serve --port 4100 //同时打开多个端口，查看多个项目</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ng new sassy-project --style=sass //可以创建sass项目</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ng <span class="built_in">set</span> defaults.styleExt scss //修改现有项目，之后要修改相应的配置文件</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 命令的简化版本</span><br><span class="line"></span><br><span class="line">1.ng g c User//ng generate component User </span><br><span class="line"></span><br><span class="line">2. cl:class</span><br><span class="line">   c:component</span><br><span class="line">   d:directive</span><br><span class="line">   e:enum</span><br><span class="line">   m:module</span><br><span class="line">   p:pipe</span><br><span class="line">   s:service</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ng build --prod --aot //编译生产模式</span><br></pre></td></tr></table></figure><h2 id="在angular项目中加载jquery-bootstrap第三方库"><a href="#在angular项目中加载jquery-bootstrap第三方库" class="headerlink" title="在angular项目中加载jquery,bootstrap第三方库"></a>在angular项目中加载jquery,bootstrap第三方库</h2><h3 id="导入第三方库"><a href="#导入第三方库" class="headerlink" title="导入第三方库"></a>导入第三方库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install jquery --save-dev</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install @types/jquery --save-dev</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install bootstrap --save-dev</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install @types/bootstrap --save-dev</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fqcelyjyarj30qc0h8n15.jpg" alt=""></p><p>因为jquery和bootstrap并不是用typescript语言写的，typescript是不能用的，所以要利用@types，把jquery,和bootstrap的类型描述文件，引入到本地的库（Node-modules）里。</p><h3 id="第一种方法：修改配置文件-angular-cli-json"><a href="#第一种方法：修改配置文件-angular-cli-json" class="headerlink" title="第一种方法：修改配置文件 angular-cli.json"></a>第一种方法：修改配置文件 angular-cli.json</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"styles"</span>: [</span><br><span class="line">        <span class="string">"styles.css"</span>,</span><br><span class="line">        <span class="string">"../node_modules/bootstrap/dist/css/bootstrap.css"</span></span><br><span class="line">      ],</span><br><span class="line"><span class="string">"scripts"</span>: [</span><br><span class="line">        <span class="string">"../node_modules/jquery/dist/jquery.js"</span>,</span><br><span class="line">        <span class="string">"../node_modules/bootstrap/dist/js/bootstrap.js"</span></span><br><span class="line">      ]</span><br></pre></td></tr></table></figure><h3 id="修改配置文件后，需要重新启动程序"><a href="#修改配置文件后，需要重新启动程序" class="headerlink" title="修改配置文件后，需要重新启动程序"></a>修改配置文件后，需要重新启动程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apachectl restart</span><br></pre></td></tr></table></figure><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fqcemfsdzdj316q0e8q7v.jpg" alt=""></p><p>在本地4200端口可以查看效果。</p><h3 id="第二种方法：使用import"><a href="#第二种方法：使用import" class="headerlink" title="第二种方法：使用import"></a>第二种方法：使用import</h3><p>在styles.css里加上 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import <span class="string">"~bootstrap/dist/css/bootstrap.min.css"</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;angular-cli&quot;&gt;&lt;a href=&quot;#angular-cli&quot; class=&quot;headerlink&quot; title=&quot;angular-cli&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://cli.angular.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;angular-cli&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;angular-cli 是一套脚手架工具&lt;/p&gt;
&lt;h2 id=&quot;安装-node-js&quot;&gt;&lt;a href=&quot;#安装-node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 node.js&quot;&gt;&lt;/a&gt;安装 &lt;a href=&quot;http://nodejs.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;node.js&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;也可以安装 npm 淘宝镜像&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装angular-cli&quot;&gt;&lt;a href=&quot;#安装angular-cli&quot; class=&quot;headerlink&quot; title=&quot;安装angular-cli&quot;&gt;&lt;/a&gt;安装angular-cli&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo cnpm install -g @angular/cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="angular2" scheme="http://yoursite.com/categories/angular2/"/>
    
    
      <category term="angular-cli" scheme="http://yoursite.com/tags/angular-cli/"/>
    
  </entry>
  
</feed>
